{"ast":null,"code":"export default function validateInfo(values) {\n  let errors = {};\n\n  if (!values.firstName.trim()) {\n    errors.firstName = 'FirstName required';\n  } // else if (!/^[A-Za-z]+/.test(values.name.trim())) {\n  //   errors.name = 'Enter a valid name';\n  // }\n\n\n  if (!values.lastName.trim()) {\n    errors.lastName = 'LastName required';\n  }\n\n  if (!values.emailId) {\n    errors.emailId = 'Email required';\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.emailId)) {\n    errors.emailId = 'Email address is invalid';\n  }\n\n  if (!values.mobileNo) {\n    errors.mobileNo = 'Password is required';\n  } else if (values.mobileNo.length > 1 && values.mobileNo, length < 10) {\n    errors.mobileNo = 'Password needs to be 10 character';\n  }\n\n  if (!values.cfpwd) {\n    errors.cfpwd = 'Password is required';\n  } else if (values.cfpwd !== values.password) {\n    errors.cfpwd = 'Passwords do not match';\n  }\n\n  return errors;\n}","map":{"version":3,"sources":["C:/Users/One Life/Desktop/finalProject/src/validateInfo.js"],"names":["validateInfo","values","errors","firstName","trim","lastName","emailId","test","mobileNo","length","cfpwd","password"],"mappings":"AAAA,eAAe,SAASA,YAAT,CAAsBC,MAAtB,EAA8B;AACzC,MAAIC,MAAM,GAAG,EAAb;;AAEA,MAAI,CAACD,MAAM,CAACE,SAAP,CAAiBC,IAAjB,EAAL,EAA8B;AAC5BF,IAAAA,MAAM,CAACC,SAAP,GAAmB,oBAAnB;AACD,GALwC,CAMzC;AACA;AACA;;;AAEA,MAAI,CAACF,MAAM,CAACI,QAAP,CAAgBD,IAAhB,EAAL,EAA6B;AACzBF,IAAAA,MAAM,CAACG,QAAP,GAAkB,mBAAlB;AACD;;AAEH,MAAI,CAACJ,MAAM,CAACK,OAAZ,EAAqB;AACnBJ,IAAAA,MAAM,CAACI,OAAP,GAAiB,gBAAjB;AACD,GAFD,MAEO,IAAI,CAAC,eAAeC,IAAf,CAAoBN,MAAM,CAACK,OAA3B,CAAL,EAA0C;AAC/CJ,IAAAA,MAAM,CAACI,OAAP,GAAiB,0BAAjB;AACD;;AAED,MAAI,CAACL,MAAM,CAACO,QAAZ,EAAsB;AACpBN,IAAAA,MAAM,CAACM,QAAP,GAAkB,sBAAlB;AACD,GAFD,MAEO,IAAIP,MAAM,CAACO,QAAP,CAAgBC,MAAhB,GAAyB,CAAzB,IAA8BR,MAAM,CAACO,QAArC,EAA8CC,MAAM,GAAG,EAA3D,EAA+D;AACpEP,IAAAA,MAAM,CAACM,QAAP,GAAkB,mCAAlB;AACD;;AAED,MAAI,CAACP,MAAM,CAACS,KAAZ,EAAmB;AACjBR,IAAAA,MAAM,CAACQ,KAAP,GAAe,sBAAf;AACD,GAFD,MAEO,IAAIT,MAAM,CAACS,KAAP,KAAiBT,MAAM,CAACU,QAA5B,EAAsC;AAC3CT,IAAAA,MAAM,CAACQ,KAAP,GAAe,wBAAf;AACD;;AACD,SAAOR,MAAP;AACD","sourcesContent":["export default function validateInfo(values) {\r\n    let errors = {};\r\n  \r\n    if (!values.firstName.trim()) {\r\n      errors.firstName = 'FirstName required';\r\n    }\r\n    // else if (!/^[A-Za-z]+/.test(values.name.trim())) {\r\n    //   errors.name = 'Enter a valid name';\r\n    // }\r\n\r\n    if (!values.lastName.trim()) {\r\n        errors.lastName = 'LastName required';\r\n      } \r\n  \r\n    if (!values.emailId) {\r\n      errors.emailId = 'Email required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.emailId)) {\r\n      errors.emailId = 'Email address is invalid';\r\n    }\r\n\r\n    if (!values.mobileNo) {\r\n      errors.mobileNo = 'Password is required';\r\n    } else if (values.mobileNo.length > 1 && values.mobileNo,length < 10) {\r\n      errors.mobileNo = 'Password needs to be 10 character';\r\n    }\r\n  \r\n    if (!values.cfpwd) {\r\n      errors.cfpwd = 'Password is required';\r\n    } else if (values.cfpwd !== values.password) {\r\n      errors.cfpwd = 'Passwords do not match';\r\n    }\r\n    return errors;\r\n  }"]},"metadata":{},"sourceType":"module"}