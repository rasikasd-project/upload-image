{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\One Life\\\\Desktop\\\\finalProject\\\\src\\\\components\\\\cpp\\\\Cpp2.js\";\nimport React from 'react';\nimport Tutorial from '../Tutorial';\nimport { SiCplusplus } from 'react-icons/si';\nimport icon from './cpp2.png';\nimport icon2 from './cpp9.png';\n\nconst Cpp1 = () => {\n  const logo = {\n    \"Lname\": icon,\n    \"Lname2\": icon2\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Tutorial, {\n      icons: logo.Lname,\n      name: \"C++\",\n      language: \"cpp\",\n      next: \"/Cpp3\",\n      icon2: logo.Lname2,\n      theoryContent: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TutorialPadding\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"Thead\",\n          children: \"C++ Data Types\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 24\n        }, this), \"In this tutorial, we will learn about basic data types such as int, float, char, etc. in C++ programming with the help of examples.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 155\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 160\n        }, this), \"In C++, data types are declarations for variables. This determines the type and size of data associated with variables. For example,\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card card-box\",\n          children: \"int age = 13;\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 24\n        }, this), \"Here,\", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }, this), \" is a variable of type \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"int\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 68\n        }, this), \". Meaning, the variable can only store integers of either 2 or 4 bytes.\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 155\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"Thead\",\n          children: \"C++ Fundamental Data Types\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 24\n        }, this), \"The table below shows the fundamental data types, their meaning, and their sizes (in bytes):\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              class: \"table table-striped\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    children: \"Data Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 32,\n                    columnNumber: 39\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    children: \"Meaning\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 33,\n                    columnNumber: 39\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    children: \"Size (in bytes)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 34,\n                    columnNumber: 39\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"int\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 39,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 39\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"Integer\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 40,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 39\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"2 or 4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 41,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 39\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"float\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 44,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 44,\n                    columnNumber: 39\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"Floating-point\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 45,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 39\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 46,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 39\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"double\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 49,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 39\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"DOuble Floating-point\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 50,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 39\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"8\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 51,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 39\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"char\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 54,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 39\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"Character\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 55,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 39\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 56,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 39\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"wchar_t\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 59,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 39\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"Wide Character\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 60,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 39\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 61,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 39\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"bool\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 64,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 39\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"Boolean\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 39\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 66,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 39\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"void\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 69,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 39\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"Empty\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 70,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 39\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"0\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 39\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 24\n        }, this), \"Now, let us discuss these fundamental data types in more detail.\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 92\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"Thead\",\n          children: \"1. C++ int\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"1. The \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"int\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 42\n            }, this), \" keyword is used to indicate integers.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"2. Its size is usually 4 bytes. Meaning, it can store values from -2147483648 to 2147483647.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"3. For example,\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: \"int salary = 85000;\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"Thead\",\n          children: \"2.C++ float and double\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"float\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 35\n            }, this), \" and \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"double\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 58\n            }, this), \" are used to store floating-point numbers (decimals and exponentials).\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"The size of \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"float\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 47\n            }, this), \" is 4 bytes and the size of \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"double\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 93\n            }, this), \" is 8 bytes. Hence, \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"double\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 132\n            }, this), \" has two times the precision of \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"float\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 183\n            }, this), \". To learn more, visit C++ float and double.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"For example,\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: [\"float area = 64.74;\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 50\n              }, this), \"double volume = 134.64534;\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this), \"As mentioned above, these two data types are also used for exponentials. For example,\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card card-body\",\n          children: \"double distance = 45E12    // 45E12 is equal to 45*10^12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"Thead\",\n          children: \"3.C++ char\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Keyword char is used for characters.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Its size is 1 byte.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Characters in C++ are enclosed inside single quotes\", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \" ' '\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 90\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"For example,\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card card-body\",\n            children: \"char test = 'h';\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"Thead\",\n          children: \"4. C++ wchar_t\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Wide character wchar_t is similar to the char data type, except its size is 2 bytes instead of 1.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"It is used to represent characters that require more memory to represent them than a single char.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"For example,\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card card-body\",\n            children: \"wchar_t test = L'\\u05DD'  // storing Hebrew character\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 35\n          }, this), \"Notice the letter L before the quotation marks\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"Thead\",\n          children: \"5. C++ bool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"The \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"bool\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 45\n            }, this), \" data type has one of two possible values: \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 105\n            }, this), \" or \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"false\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 126\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Booleans are used in conditional statements and loops (which we will learn in later chapters).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"For example,\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card card-body\",\n            children: \"bool cond = false;\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"Thead\",\n          children: \"6. C++ void\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"The \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"void\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 45\n            }, this), \" keyword indicates an absence of data. It means \\\"nothing\\\" or \\\"no value\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"We will use void when we learn about functions and pointers.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 33\n        }, this), \"Note: We cannot declare variables of the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"void\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 74\n        }, this), \" type.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 97\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 102\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Cpp1;\nexport default Cpp1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cpp1\");","map":{"version":3,"sources":["C:/Users/One Life/Desktop/finalProject/src/components/cpp/Cpp2.js"],"names":["React","Tutorial","SiCplusplus","icon","icon2","Cpp1","logo","Lname","Lname2"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Tutorial from '../Tutorial'\r\nimport {SiCplusplus} from 'react-icons/si'\r\nimport icon from './cpp2.png'\r\nimport icon2 from './cpp9.png'\r\n\r\nconst Cpp1 = () => {\r\n  const logo={\"Lname\":icon,\r\n              \"Lname2\":icon2\r\n            }\r\n    return (\r\n        <div>\r\n            <Tutorial icons = {logo.Lname} name = \"C++\" language = \"cpp\" next=\"/Cpp3\" icon2={logo.Lname2}\r\n                theoryContent = {\r\n                   <div className=\"TutorialPadding\">\r\n                       <h4 className=\"Thead\">C++ Data Types</h4>\r\n                       In this tutorial, we will learn about basic data types such as int, float, char, etc. in C++ programming with the help of examples.<br/><br/>\r\n                       In C++, data types are declarations for variables. This determines the type and size of data associated with variables. For example,\r\n                       <div className=\"card card-box\">\r\n                          int age = 13;\r\n                       </div>\r\n                       Here,<code>age</code> is a variable of type <code>int</code>. Meaning, the variable can only store integers of either 2 or 4 bytes.<hr/>\r\n                       <h4 className=\"Thead\">\r\n                         C++ Fundamental Data Types  \r\n                       </h4>\r\n                       The table below shows the fundamental data types, their meaning, and their sizes (in bytes):\r\n                       <div class=\"card card-body\">\r\n                            <pre>\r\n                            <table class=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                      <th scope=\"col\">Data Type</th>\r\n                                      <th scope=\"col\">Meaning</th>\r\n                                      <th scope=\"col\">Size (in bytes)</th>\r\n                                    </tr>\r\n                                  </thead>\r\n                                  <tbody>\r\n                                    <tr>\r\n                                      <td><code>int</code></td>\r\n                                      <td><code>Integer</code></td>\r\n                                      <td><code>2 or 4</code></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td><code>float</code></td>\r\n                                      <td><code>Floating-point</code></td>\r\n                                      <td><code>4</code></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td><code>double</code></td>\r\n                                      <td><code>DOuble Floating-point</code></td>\r\n                                      <td><code>8</code></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td><code>char</code></td>\r\n                                      <td><code>Character</code></td>\r\n                                      <td><code>1</code></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td><code>wchar_t</code></td>\r\n                                      <td><code>Wide Character</code></td>\r\n                                      <td><code>2</code></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td><code>bool</code></td>\r\n                                      <td><code>Boolean</code></td>\r\n                                      <td><code>1</code></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td><code>void</code></td>\r\n                                      <td><code>Empty</code></td>\r\n                                      <td><code>0</code></td>\r\n                                    </tr> \r\n                                  </tbody>\r\n                                </table>\r\n                            </pre>\r\n                           </div>\r\n                           Now, let us discuss these fundamental data types in more detail.<hr/>\r\n                           <h4 className=\"Thead\">1. C++ int</h4>\r\n                           <ul>\r\n                              <li>1. The <code>int</code> keyword is used to indicate integers.</li>\r\n                              <li>2. Its size is usually 4 bytes. Meaning, it can store values from -2147483648 to 2147483647.</li>\r\n                              <li>3. For example,</li>\r\n                              <div className=\"card card-body\">\r\n                                <pre>\r\n                                  int salary = 85000;\r\n                                </pre>\r\n                              </div>\r\n                            </ul>\r\n                            <hr />\r\n                            <h4 className=\"Thead\">2.C++ float and double</h4>\r\n                            <ul>\r\n                              <li><code>float</code> and <code>double</code> are used to store floating-point numbers (decimals and exponentials).</li>\r\n                              <li>The size of <code>float</code> is 4 bytes and the size of <code>double</code> is 8 bytes. Hence, <code>double</code> has two times the precision of <code>float</code>. To learn more, visit C++ float and double.</li>\r\n                              <li>For example,</li>\r\n                              <div className=\"card card-body\">\r\n                              <pre>\r\n                              float area = 64.74;<br/>\r\n                              double volume = 134.64534;\r\n                              </pre>\r\n                              </div>  \r\n                            </ul>\r\n                            As mentioned above, these two data types are also used for exponentials. For example,\r\n                            <div className=\"card card-body\">\r\n                            double distance = 45E12    // 45E12 is equal to 45*10^12\r\n                            </div>  \r\n                            <hr/>\r\n                            <h4 className=\"Thead\">3.C++ char</h4>\r\n                              <ul>\r\n                                  <li>Keyword char is used for characters.</li>\r\n                                  <li>Its size is 1 byte.</li>\r\n                                  <li>Characters in C++ are enclosed inside single quotes<code> ' '</code>.</li>\r\n                                  <li>For example,</li>\r\n                                  <div className=\"card card-body\">\r\n                                      char test = 'h';\r\n                                  </div>\r\n                             </ul> \r\n                                <hr />\r\n                                <h4 className=\"Thead\">4. C++ wchar_t</h4>\r\n                                <ul>\r\n                                  <li>Wide character wchar_t is similar to the char data type, except its size is 2 bytes instead of 1.</li>\r\n                                  <li>It is used to represent characters that require more memory to represent them than a single char.</li>\r\n                                  <li>For example,</li>\r\n                                  <div class=\"card card-body\">\r\n                                    wchar_t test = L'ם'  // storing Hebrew character\r\n                                  </div>\r\n                                  Notice the letter L before the quotation marks\r\n                                 </ul> \r\n\r\n                                <h4 className=\"Thead\">5. C++ bool</h4>\r\n                                <ul>\r\n                                    <li>The <code>bool</code> data type has one of two possible values: <code>true</code> or <code>false</code>.</li>\r\n                                    <li>Booleans are used in conditional statements and loops (which we will learn in later chapters).</li>\r\n                                    <li>For example,</li>\r\n                                    <div className=\"card card-body\">\r\n                                        bool cond = false;\r\n                                    </div>  \r\n                                </ul> \r\n                                <hr/>\r\n                                <h4 className=\"Thead\">6. C++ void</h4> \r\n                                <ul>\r\n                                    <li>The <code>void</code> keyword indicates an absence of data. It means \"nothing\" or \"no value</li>\r\n                                    <li>We will use void when we learn about functions and pointers.</li>\r\n                                  </ul>  \r\n                                Note: We cannot declare variables of the <code>void</code> type.<br/><hr/>  \r\n                              \r\n\r\n                   </div> \r\n                }\r\n            \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cpp1\r\n"]},"metadata":{},"sourceType":"module"}