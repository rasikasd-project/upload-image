{"ast":null,"code":"export default function validateInfo(user) {\n  let errors = {};\n\n  if (!user.firstName.trim()) {\n    errors.firstName = 'FirstName required';\n  } // else if (!/^[A-Za-z]+/.test(values.name.trim())) {\n  //   errors.name = 'Enter a valid name';\n  // }\n\n\n  if (!user.lastName.trim()) {\n    errors.lastName = 'LastName required';\n  }\n\n  if (!user.emailId) {\n    errors.emailId = 'Email required';\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.emailId)) {\n    errors.emailId = 'Email address is invalid';\n  }\n\n  if (!values.mobileNo) {\n    errors.mobileNo = 'Password is required';\n  } else if (values.mobileNo.length > 1 && values.mobileNo.length < 10) {\n    errors.mobileNo = 'Password needs to be 10 characters long';\n  }\n\n  if (!values.cfpwd) {\n    errors.cfpwd = 'Password is required';\n  } else if (values.cfpwd !== values.password) {\n    errors.cfpwd = 'Passwords do not match';\n  }\n\n  return errors;\n}","map":{"version":3,"sources":["C:/Users/One Life/Desktop/finalProject/src/validateInfo.js"],"names":["validateInfo","user","errors","firstName","trim","lastName","emailId","test","values","mobileNo","length","cfpwd","password"],"mappings":"AAAA,eAAe,SAASA,YAAT,CAAsBC,IAAtB,EAA4B;AACvC,MAAIC,MAAM,GAAG,EAAb;;AAEA,MAAI,CAACD,IAAI,CAACE,SAAL,CAAeC,IAAf,EAAL,EAA4B;AAC1BF,IAAAA,MAAM,CAACC,SAAP,GAAmB,oBAAnB;AACD,GALsC,CAMvC;AACA;AACA;;;AAEA,MAAI,CAACF,IAAI,CAACI,QAAL,CAAcD,IAAd,EAAL,EAA2B;AACvBF,IAAAA,MAAM,CAACG,QAAP,GAAkB,mBAAlB;AACD;;AAEH,MAAI,CAACJ,IAAI,CAACK,OAAV,EAAmB;AACjBJ,IAAAA,MAAM,CAACI,OAAP,GAAiB,gBAAjB;AACD,GAFD,MAEO,IAAI,CAAC,eAAeC,IAAf,CAAoBC,MAAM,CAACF,OAA3B,CAAL,EAA0C;AAC/CJ,IAAAA,MAAM,CAACI,OAAP,GAAiB,0BAAjB;AACD;;AAED,MAAI,CAACE,MAAM,CAACC,QAAZ,EAAsB;AACpBP,IAAAA,MAAM,CAACO,QAAP,GAAkB,sBAAlB;AACD,GAFD,MAEO,IAAID,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyB,CAAzB,IAA8BF,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyB,EAA3D,EAA+D;AACpER,IAAAA,MAAM,CAACO,QAAP,GAAkB,yCAAlB;AACD;;AAED,MAAI,CAACD,MAAM,CAACG,KAAZ,EAAmB;AACjBT,IAAAA,MAAM,CAACS,KAAP,GAAe,sBAAf;AACD,GAFD,MAEO,IAAIH,MAAM,CAACG,KAAP,KAAiBH,MAAM,CAACI,QAA5B,EAAsC;AAC3CV,IAAAA,MAAM,CAACS,KAAP,GAAe,wBAAf;AACD;;AACD,SAAOT,MAAP;AACD","sourcesContent":["export default function validateInfo(user) {\r\n    let errors = {};\r\n  \r\n    if (!user.firstName.trim()) {\r\n      errors.firstName = 'FirstName required';\r\n    }\r\n    // else if (!/^[A-Za-z]+/.test(values.name.trim())) {\r\n    //   errors.name = 'Enter a valid name';\r\n    // }\r\n\r\n    if (!user.lastName.trim()) {\r\n        errors.lastName = 'LastName required';\r\n      } \r\n  \r\n    if (!user.emailId) {\r\n      errors.emailId = 'Email required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.emailId)) {\r\n      errors.emailId = 'Email address is invalid';\r\n    }\r\n\r\n    if (!values.mobileNo) {\r\n      errors.mobileNo = 'Password is required';\r\n    } else if (values.mobileNo.length > 1 && values.mobileNo.length < 10) {\r\n      errors.mobileNo = 'Password needs to be 10 characters long';\r\n    }\r\n  \r\n    if (!values.cfpwd) {\r\n      errors.cfpwd = 'Password is required';\r\n    } else if (values.cfpwd !== values.password) {\r\n      errors.cfpwd = 'Passwords do not match';\r\n    }\r\n    return errors;\r\n  }"]},"metadata":{},"sourceType":"module"}