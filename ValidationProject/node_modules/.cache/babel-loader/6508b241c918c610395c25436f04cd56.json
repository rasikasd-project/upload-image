{"ast":null,"code":"import monaco from '@monaco-editor/loader';\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport MonacoContainer from '../MonacoContainer/index.js';\nimport useMount from '../hooks/useMount/index.js';\nimport useUpdate from '../hooks/useUpdate/index.js';\nimport { noop } from '../utils/index.js';\n\nfunction Editor({\n  value,\n  language,\n  editorDidMount,\n  theme,\n  line,\n  width,\n  height,\n  loading,\n  options,\n  overrideServices,\n  _isControlledMode,\n  className,\n  wrapperClassName\n}) {\n  const [isEditorReady, setIsEditorReady] = useState(false);\n  const [isMonacoMounting, setIsMonacoMounting] = useState(true);\n  const editorRef = useRef(null);\n  const monacoRef = useRef(null);\n  const containerRef = useRef(null);\n  const editorDidMountRef = useRef(editorDidMount);\n  useMount(() => {\n    const cancelable = monaco.init();\n    cancelable.then(monaco => (monacoRef.current = monaco) && setIsMonacoMounting(false)).catch(error => (error === null || error === void 0 ? void 0 : error.type) !== 'cancelation' && console.error('Monaco initialization: error:', error));\n    return () => editorRef.current ? disposeEditor() : cancelable.cancel();\n  });\n  useUpdate(() => {\n    editorRef.current.updateOptions(options);\n  }, [options], isEditorReady);\n  useUpdate(() => {\n    if (editorRef.current.getOption(monacoRef.current.editor.EditorOption.readOnly)) {\n      editorRef.current.setValue(value);\n    } else {\n      if (value !== editorRef.current.getValue()) {\n        editorRef.current.executeEdits('', [{\n          range: editorRef.current.getModel().getFullModelRange(),\n          text: value,\n          forceMoveMarkers: true\n        }]);\n\n        if (_isControlledMode) {\n          const model = editorRef.current.getModel();\n          model.forceTokenization(model.getLineCount());\n        }\n\n        editorRef.current.pushUndoStop();\n      }\n    }\n  }, [value], isEditorReady);\n  useUpdate(() => {\n    monacoRef.current.editor.setModelLanguage(editorRef.current.getModel(), language);\n  }, [language], isEditorReady);\n  useUpdate(() => {\n    editorRef.current.setScrollPosition({\n      scrollTop: line\n    });\n  }, [line], isEditorReady);\n  useUpdate(() => {\n    monacoRef.current.editor.setTheme(theme);\n  }, [theme], isEditorReady);\n  const createEditor = useCallback(() => {\n    editorRef.current = monacoRef.current.editor.create(containerRef.current, {\n      value,\n      language,\n      automaticLayout: true,\n      ...options\n    }, overrideServices);\n    monacoRef.current.editor.setTheme(theme);\n    setIsEditorReady(true);\n  }, [language, options, overrideServices, theme, value]);\n  useEffect(() => {\n    if (isEditorReady) {\n      editorDidMountRef.current(editorRef.current.getValue.bind(editorRef.current), editorRef.current);\n    }\n  }, [isEditorReady]);\n  useEffect(() => {\n    !isMonacoMounting && !isEditorReady && createEditor();\n  }, [isMonacoMounting, isEditorReady, createEditor]);\n\n  const disposeEditor = () => editorRef.current.dispose();\n\n  return /*#__PURE__*/React.createElement(MonacoContainer, {\n    width: width,\n    height: height,\n    isEditorReady: isEditorReady,\n    loading: loading,\n    _ref: containerRef,\n    className: className,\n    wrapperClassName: wrapperClassName\n  });\n}\n\nEditor.propTypes = {\n  value: PropTypes.string,\n  language: PropTypes.string,\n  editorDidMount: PropTypes.func,\n  theme: PropTypes.string,\n  line: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  loading: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  options: PropTypes.object,\n  className: PropTypes.string,\n  wrapperClassName: PropTypes.string,\n  overrideServices: PropTypes.object,\n  _isControlledMode: PropTypes.bool\n};\nEditor.defaultProps = {\n  editorDidMount: noop,\n  theme: 'light',\n  width: '100%',\n  height: '100%',\n  loading: 'Loading...',\n  options: {},\n  overrideServices: {},\n  _isControlledMode: false\n};\nexport default Editor;","map":{"version":3,"sources":["C:/Users/One Life/Desktop/finalProject/node_modules/@monaco-editor/react/lib/es/Editor/Editor.js"],"names":["monaco","React","useState","useRef","useCallback","useEffect","PropTypes","MonacoContainer","useMount","useUpdate","noop","Editor","value","language","editorDidMount","theme","line","width","height","loading","options","overrideServices","_isControlledMode","className","wrapperClassName","isEditorReady","setIsEditorReady","isMonacoMounting","setIsMonacoMounting","editorRef","monacoRef","containerRef","editorDidMountRef","cancelable","init","then","current","catch","error","type","console","disposeEditor","cancel","updateOptions","getOption","editor","EditorOption","readOnly","setValue","getValue","executeEdits","range","getModel","getFullModelRange","text","forceMoveMarkers","model","forceTokenization","getLineCount","pushUndoStop","setModelLanguage","setScrollPosition","scrollTop","setTheme","createEditor","create","automaticLayout","bind","dispose","createElement","_ref","propTypes","string","func","number","oneOfType","element","object","bool","defaultProps"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,WAAlC,EAA+CC,SAA/C,QAAgE,OAAhE;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAEA,SAASC,MAAT,CAAgB;AACdC,EAAAA,KADc;AAEdC,EAAAA,QAFc;AAGdC,EAAAA,cAHc;AAIdC,EAAAA,KAJc;AAKdC,EAAAA,IALc;AAMdC,EAAAA,KANc;AAOdC,EAAAA,MAPc;AAQdC,EAAAA,OARc;AASdC,EAAAA,OATc;AAUdC,EAAAA,gBAVc;AAWdC,EAAAA,iBAXc;AAYdC,EAAAA,SAZc;AAadC,EAAAA;AAbc,CAAhB,EAcG;AACD,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCxB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACyB,gBAAD,EAAmBC,mBAAnB,IAA0C1B,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM2B,SAAS,GAAG1B,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM2B,SAAS,GAAG3B,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM4B,YAAY,GAAG5B,MAAM,CAAC,IAAD,CAA3B;AACA,QAAM6B,iBAAiB,GAAG7B,MAAM,CAACW,cAAD,CAAhC;AACAN,EAAAA,QAAQ,CAAC,MAAM;AACb,UAAMyB,UAAU,GAAGjC,MAAM,CAACkC,IAAP,EAAnB;AACAD,IAAAA,UAAU,CAACE,IAAX,CAAgBnC,MAAM,IAAI,CAAC8B,SAAS,CAACM,OAAV,GAAoBpC,MAArB,KAAgC4B,mBAAmB,CAAC,KAAD,CAA7E,EAAsFS,KAAtF,CAA4FC,KAAK,IAAI,CAACA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAAjC,GAAqC,KAAK,CAA1C,GAA8CA,KAAK,CAACC,IAArD,MAA+D,aAA/D,IAAgFC,OAAO,CAACF,KAAR,CAAc,+BAAd,EAA+CA,KAA/C,CAArL;AACA,WAAO,MAAMT,SAAS,CAACO,OAAV,GAAoBK,aAAa,EAAjC,GAAsCR,UAAU,CAACS,MAAX,EAAnD;AACD,GAJO,CAAR;AAKAjC,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,SAAS,CAACO,OAAV,CAAkBO,aAAlB,CAAgCvB,OAAhC;AACD,GAFQ,EAEN,CAACA,OAAD,CAFM,EAEKK,aAFL,CAAT;AAGAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,SAAS,CAACO,OAAV,CAAkBQ,SAAlB,CAA4Bd,SAAS,CAACM,OAAV,CAAkBS,MAAlB,CAAyBC,YAAzB,CAAsCC,QAAlE,CAAJ,EAAiF;AAC/ElB,MAAAA,SAAS,CAACO,OAAV,CAAkBY,QAAlB,CAA2BpC,KAA3B;AACD,KAFD,MAEO;AACL,UAAIA,KAAK,KAAKiB,SAAS,CAACO,OAAV,CAAkBa,QAAlB,EAAd,EAA4C;AAC1CpB,QAAAA,SAAS,CAACO,OAAV,CAAkBc,YAAlB,CAA+B,EAA/B,EAAmC,CAAC;AAClCC,UAAAA,KAAK,EAAEtB,SAAS,CAACO,OAAV,CAAkBgB,QAAlB,GAA6BC,iBAA7B,EAD2B;AAElCC,UAAAA,IAAI,EAAE1C,KAF4B;AAGlC2C,UAAAA,gBAAgB,EAAE;AAHgB,SAAD,CAAnC;;AAMA,YAAIjC,iBAAJ,EAAuB;AACrB,gBAAMkC,KAAK,GAAG3B,SAAS,CAACO,OAAV,CAAkBgB,QAAlB,EAAd;AACAI,UAAAA,KAAK,CAACC,iBAAN,CAAwBD,KAAK,CAACE,YAAN,EAAxB;AACD;;AAED7B,QAAAA,SAAS,CAACO,OAAV,CAAkBuB,YAAlB;AACD;AACF;AACF,GAnBQ,EAmBN,CAAC/C,KAAD,CAnBM,EAmBGa,aAnBH,CAAT;AAoBAhB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,SAAS,CAACM,OAAV,CAAkBS,MAAlB,CAAyBe,gBAAzB,CAA0C/B,SAAS,CAACO,OAAV,CAAkBgB,QAAlB,EAA1C,EAAwEvC,QAAxE;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,EAEMY,aAFN,CAAT;AAGAhB,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,SAAS,CAACO,OAAV,CAAkByB,iBAAlB,CAAoC;AAClCC,MAAAA,SAAS,EAAE9C;AADuB,KAApC;AAGD,GAJQ,EAIN,CAACA,IAAD,CAJM,EAIES,aAJF,CAAT;AAKAhB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,SAAS,CAACM,OAAV,CAAkBS,MAAlB,CAAyBkB,QAAzB,CAAkChD,KAAlC;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,EAEGU,aAFH,CAAT;AAGA,QAAMuC,YAAY,GAAG5D,WAAW,CAAC,MAAM;AACrCyB,IAAAA,SAAS,CAACO,OAAV,GAAoBN,SAAS,CAACM,OAAV,CAAkBS,MAAlB,CAAyBoB,MAAzB,CAAgClC,YAAY,CAACK,OAA7C,EAAsD;AACxExB,MAAAA,KADwE;AAExEC,MAAAA,QAFwE;AAGxEqD,MAAAA,eAAe,EAAE,IAHuD;AAIxE,SAAG9C;AAJqE,KAAtD,EAKjBC,gBALiB,CAApB;AAMAS,IAAAA,SAAS,CAACM,OAAV,CAAkBS,MAAlB,CAAyBkB,QAAzB,CAAkChD,KAAlC;AACAW,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAT+B,EAS7B,CAACb,QAAD,EAAWO,OAAX,EAAoBC,gBAApB,EAAsCN,KAAtC,EAA6CH,KAA7C,CAT6B,CAAhC;AAUAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,aAAJ,EAAmB;AACjBO,MAAAA,iBAAiB,CAACI,OAAlB,CAA0BP,SAAS,CAACO,OAAV,CAAkBa,QAAlB,CAA2BkB,IAA3B,CAAgCtC,SAAS,CAACO,OAA1C,CAA1B,EAA8EP,SAAS,CAACO,OAAxF;AACD;AACF,GAJQ,EAIN,CAACX,aAAD,CAJM,CAAT;AAKApB,EAAAA,SAAS,CAAC,MAAM;AACd,KAACsB,gBAAD,IAAqB,CAACF,aAAtB,IAAuCuC,YAAY,EAAnD;AACD,GAFQ,EAEN,CAACrC,gBAAD,EAAmBF,aAAnB,EAAkCuC,YAAlC,CAFM,CAAT;;AAIA,QAAMvB,aAAa,GAAG,MAAMZ,SAAS,CAACO,OAAV,CAAkBgC,OAAlB,EAA5B;;AAEA,SAAO,aAAanE,KAAK,CAACoE,aAAN,CAAoB9D,eAApB,EAAqC;AACvDU,IAAAA,KAAK,EAAEA,KADgD;AAEvDC,IAAAA,MAAM,EAAEA,MAF+C;AAGvDO,IAAAA,aAAa,EAAEA,aAHwC;AAIvDN,IAAAA,OAAO,EAAEA,OAJ8C;AAKvDmD,IAAAA,IAAI,EAAEvC,YALiD;AAMvDR,IAAAA,SAAS,EAAEA,SAN4C;AAOvDC,IAAAA,gBAAgB,EAAEA;AAPqC,GAArC,CAApB;AASD;;AAEDb,MAAM,CAAC4D,SAAP,GAAmB;AACjB3D,EAAAA,KAAK,EAAEN,SAAS,CAACkE,MADA;AAEjB3D,EAAAA,QAAQ,EAAEP,SAAS,CAACkE,MAFH;AAGjB1D,EAAAA,cAAc,EAAER,SAAS,CAACmE,IAHT;AAIjB1D,EAAAA,KAAK,EAAET,SAAS,CAACkE,MAJA;AAKjBxD,EAAAA,IAAI,EAAEV,SAAS,CAACoE,MALC;AAMjBzD,EAAAA,KAAK,EAAEX,SAAS,CAACqE,SAAV,CAAoB,CAACrE,SAAS,CAACoE,MAAX,EAAmBpE,SAAS,CAACkE,MAA7B,CAApB,CANU;AAOjBtD,EAAAA,MAAM,EAAEZ,SAAS,CAACqE,SAAV,CAAoB,CAACrE,SAAS,CAACoE,MAAX,EAAmBpE,SAAS,CAACkE,MAA7B,CAApB,CAPS;AAQjBrD,EAAAA,OAAO,EAAEb,SAAS,CAACqE,SAAV,CAAoB,CAACrE,SAAS,CAACsE,OAAX,EAAoBtE,SAAS,CAACkE,MAA9B,CAApB,CARQ;AASjBpD,EAAAA,OAAO,EAAEd,SAAS,CAACuE,MATF;AAUjBtD,EAAAA,SAAS,EAAEjB,SAAS,CAACkE,MAVJ;AAWjBhD,EAAAA,gBAAgB,EAAElB,SAAS,CAACkE,MAXX;AAYjBnD,EAAAA,gBAAgB,EAAEf,SAAS,CAACuE,MAZX;AAajBvD,EAAAA,iBAAiB,EAAEhB,SAAS,CAACwE;AAbZ,CAAnB;AAeAnE,MAAM,CAACoE,YAAP,GAAsB;AACpBjE,EAAAA,cAAc,EAAEJ,IADI;AAEpBK,EAAAA,KAAK,EAAE,OAFa;AAGpBE,EAAAA,KAAK,EAAE,MAHa;AAIpBC,EAAAA,MAAM,EAAE,MAJY;AAKpBC,EAAAA,OAAO,EAAE,YALW;AAMpBC,EAAAA,OAAO,EAAE,EANW;AAOpBC,EAAAA,gBAAgB,EAAE,EAPE;AAQpBC,EAAAA,iBAAiB,EAAE;AARC,CAAtB;AAWA,eAAeX,MAAf","sourcesContent":["import monaco from '@monaco-editor/loader';\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport MonacoContainer from '../MonacoContainer/index.js';\nimport useMount from '../hooks/useMount/index.js';\nimport useUpdate from '../hooks/useUpdate/index.js';\nimport { noop } from '../utils/index.js';\n\nfunction Editor({\n  value,\n  language,\n  editorDidMount,\n  theme,\n  line,\n  width,\n  height,\n  loading,\n  options,\n  overrideServices,\n  _isControlledMode,\n  className,\n  wrapperClassName\n}) {\n  const [isEditorReady, setIsEditorReady] = useState(false);\n  const [isMonacoMounting, setIsMonacoMounting] = useState(true);\n  const editorRef = useRef(null);\n  const monacoRef = useRef(null);\n  const containerRef = useRef(null);\n  const editorDidMountRef = useRef(editorDidMount);\n  useMount(() => {\n    const cancelable = monaco.init();\n    cancelable.then(monaco => (monacoRef.current = monaco) && setIsMonacoMounting(false)).catch(error => (error === null || error === void 0 ? void 0 : error.type) !== 'cancelation' && console.error('Monaco initialization: error:', error));\n    return () => editorRef.current ? disposeEditor() : cancelable.cancel();\n  });\n  useUpdate(() => {\n    editorRef.current.updateOptions(options);\n  }, [options], isEditorReady);\n  useUpdate(() => {\n    if (editorRef.current.getOption(monacoRef.current.editor.EditorOption.readOnly)) {\n      editorRef.current.setValue(value);\n    } else {\n      if (value !== editorRef.current.getValue()) {\n        editorRef.current.executeEdits('', [{\n          range: editorRef.current.getModel().getFullModelRange(),\n          text: value,\n          forceMoveMarkers: true\n        }]);\n\n        if (_isControlledMode) {\n          const model = editorRef.current.getModel();\n          model.forceTokenization(model.getLineCount());\n        }\n\n        editorRef.current.pushUndoStop();\n      }\n    }\n  }, [value], isEditorReady);\n  useUpdate(() => {\n    monacoRef.current.editor.setModelLanguage(editorRef.current.getModel(), language);\n  }, [language], isEditorReady);\n  useUpdate(() => {\n    editorRef.current.setScrollPosition({\n      scrollTop: line\n    });\n  }, [line], isEditorReady);\n  useUpdate(() => {\n    monacoRef.current.editor.setTheme(theme);\n  }, [theme], isEditorReady);\n  const createEditor = useCallback(() => {\n    editorRef.current = monacoRef.current.editor.create(containerRef.current, {\n      value,\n      language,\n      automaticLayout: true,\n      ...options\n    }, overrideServices);\n    monacoRef.current.editor.setTheme(theme);\n    setIsEditorReady(true);\n  }, [language, options, overrideServices, theme, value]);\n  useEffect(() => {\n    if (isEditorReady) {\n      editorDidMountRef.current(editorRef.current.getValue.bind(editorRef.current), editorRef.current);\n    }\n  }, [isEditorReady]);\n  useEffect(() => {\n    !isMonacoMounting && !isEditorReady && createEditor();\n  }, [isMonacoMounting, isEditorReady, createEditor]);\n\n  const disposeEditor = () => editorRef.current.dispose();\n\n  return /*#__PURE__*/React.createElement(MonacoContainer, {\n    width: width,\n    height: height,\n    isEditorReady: isEditorReady,\n    loading: loading,\n    _ref: containerRef,\n    className: className,\n    wrapperClassName: wrapperClassName\n  });\n}\n\nEditor.propTypes = {\n  value: PropTypes.string,\n  language: PropTypes.string,\n  editorDidMount: PropTypes.func,\n  theme: PropTypes.string,\n  line: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  loading: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  options: PropTypes.object,\n  className: PropTypes.string,\n  wrapperClassName: PropTypes.string,\n  overrideServices: PropTypes.object,\n  _isControlledMode: PropTypes.bool\n};\nEditor.defaultProps = {\n  editorDidMount: noop,\n  theme: 'light',\n  width: '100%',\n  height: '100%',\n  loading: 'Loading...',\n  options: {},\n  overrideServices: {},\n  _isControlledMode: false\n};\n\nexport default Editor;\n"]},"metadata":{},"sourceType":"module"}