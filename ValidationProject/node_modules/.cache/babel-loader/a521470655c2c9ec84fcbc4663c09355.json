{"ast":null,"code":"import { slicedToArray as _slicedToArray } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport state from 'state-local';\nimport config$1 from '../config/index.js';\nimport validators from '../validators/index.js';\nimport compose from '../utils/compose.js';\nimport merge from '../utils/deepMerge.js';\nimport makeCancelable from '../utils/makeCancelable.js';\n/** the local state of the module */\n\nvar _state$create = state.create({\n  config: config$1,\n  isInitialized: false,\n  resolve: null,\n  reject: null\n}),\n    _state$create2 = _slicedToArray(_state$create, 2),\n    getState = _state$create2[0],\n    setState = _state$create2[1];\n/**\n * set the loader configuration\n * @param {Object} config - the configuration object\n */\n\n\nfunction config(config) {\n  setState(function (state) {\n    return {\n      config: merge(state.config, validators.config(config))\n    };\n  });\n}\n/**\n * handles the initialization of the monaco-editor\n * @return {Promise} - returns an instance of monaco (with a cancelable promise)\n */\n\n\nfunction init() {\n  var state = getState(function (_ref) {\n    var isInitialized = _ref.isInitialized;\n    return {\n      isInitialized: isInitialized\n    };\n  });\n\n  if (!state.isInitialized) {\n    if (window.monaco && window.monaco.editor) {\n      return makeCancelable(Promise.resolve(window.monaco));\n    }\n\n    compose(injectScripts, getMonacoLoaderScript)(configureLoader);\n    setState({\n      isInitialized: true\n    });\n  }\n\n  return makeCancelable(wrapperPromise);\n}\n/**\n * injects provided scripts into the document.body\n * @param {Object} script - an HTML script element\n * @return {Object} - the injected HTML script element\n */\n\n\nfunction injectScripts(script) {\n  return document.body.appendChild(script);\n}\n/**\n * creates an HTML script element with/without provided src\n * @param {string} [src] - the source path of the script\n * @return {Object} - the created HTML script element\n */\n\n\nfunction createScript(src) {\n  var script = document.createElement('script');\n  return src && (script.src = src), script;\n}\n/**\n * creates an HTML script element with the monaco loader src\n * @return {Object} - the created HTML script element\n */\n\n\nfunction getMonacoLoaderScript(configureLoader) {\n  var state = getState(function (_ref2) {\n    var config = _ref2.config,\n        reject = _ref2.reject;\n    return {\n      config: config,\n      reject: reject\n    };\n  });\n  var loaderScript = createScript(\"\".concat(state.config.paths.vs, \"/loader.js\"));\n\n  loaderScript.onload = function () {\n    return configureLoader();\n  };\n\n  loaderScript.onerror = state.reject;\n  return loaderScript;\n}\n/**\n * configures the monaco loader\n */\n\n\nfunction configureLoader() {\n  var state = getState(function (_ref3) {\n    var config = _ref3.config,\n        resolve = _ref3.resolve,\n        reject = _ref3.reject;\n    return {\n      config: config,\n      resolve: resolve,\n      reject: reject\n    };\n  });\n  var require = window.require;\n\n  require.config(state.config);\n\n  require(['vs/editor/editor.main'], function (monaco) {\n    state.resolve(monaco);\n  }, function (error) {\n    state.reject(error);\n  });\n}\n\nvar wrapperPromise = new Promise(function (resolve, reject) {\n  return setState({\n    resolve: resolve,\n    reject: reject\n  });\n});\nvar monaco = {\n  config: config,\n  init: init\n};\nexport default monaco;","map":{"version":3,"sources":["C:/Users/One Life/Desktop/finalProject/node_modules/@monaco-editor/loader/lib/es/monaco/index.js"],"names":["slicedToArray","_slicedToArray","state","config$1","validators","compose","merge","makeCancelable","_state$create","create","config","isInitialized","resolve","reject","_state$create2","getState","setState","init","_ref","window","monaco","editor","Promise","injectScripts","getMonacoLoaderScript","configureLoader","wrapperPromise","script","document","body","appendChild","createScript","src","createElement","_ref2","loaderScript","concat","paths","vs","onload","onerror","_ref3","require","error"],"mappings":"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","sourcesContent":["import { slicedToArray as _slicedToArray } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport state from 'state-local';\nimport config$1 from '../config/index.js';\nimport validators from '../validators/index.js';\nimport compose from '../utils/compose.js';\nimport merge from '../utils/deepMerge.js';\nimport makeCancelable from '../utils/makeCancelable.js';\n\n/** the local state of the module */\n\nvar _state$create = state.create({\n  config: config$1,\n  isInitialized: false,\n  resolve: null,\n  reject: null\n}),\n    _state$create2 = _slicedToArray(_state$create, 2),\n    getState = _state$create2[0],\n    setState = _state$create2[1];\n/**\n * set the loader configuration\n * @param {Object} config - the configuration object\n */\n\n\nfunction config(config) {\n  setState(function (state) {\n    return {\n      config: merge(state.config, validators.config(config))\n    };\n  });\n}\n/**\n * handles the initialization of the monaco-editor\n * @return {Promise} - returns an instance of monaco (with a cancelable promise)\n */\n\n\nfunction init() {\n  var state = getState(function (_ref) {\n    var isInitialized = _ref.isInitialized;\n    return {\n      isInitialized: isInitialized\n    };\n  });\n\n  if (!state.isInitialized) {\n    if (window.monaco && window.monaco.editor) {\n      return makeCancelable(Promise.resolve(window.monaco));\n    }\n\n    compose(injectScripts, getMonacoLoaderScript)(configureLoader);\n    setState({\n      isInitialized: true\n    });\n  }\n\n  return makeCancelable(wrapperPromise);\n}\n/**\n * injects provided scripts into the document.body\n * @param {Object} script - an HTML script element\n * @return {Object} - the injected HTML script element\n */\n\n\nfunction injectScripts(script) {\n  return document.body.appendChild(script);\n}\n/**\n * creates an HTML script element with/without provided src\n * @param {string} [src] - the source path of the script\n * @return {Object} - the created HTML script element\n */\n\n\nfunction createScript(src) {\n  var script = document.createElement('script');\n  return src && (script.src = src), script;\n}\n/**\n * creates an HTML script element with the monaco loader src\n * @return {Object} - the created HTML script element\n */\n\n\nfunction getMonacoLoaderScript(configureLoader) {\n  var state = getState(function (_ref2) {\n    var config = _ref2.config,\n        reject = _ref2.reject;\n    return {\n      config: config,\n      reject: reject\n    };\n  });\n  var loaderScript = createScript(\"\".concat(state.config.paths.vs, \"/loader.js\"));\n\n  loaderScript.onload = function () {\n    return configureLoader();\n  };\n\n  loaderScript.onerror = state.reject;\n  return loaderScript;\n}\n/**\n * configures the monaco loader\n */\n\n\nfunction configureLoader() {\n  var state = getState(function (_ref3) {\n    var config = _ref3.config,\n        resolve = _ref3.resolve,\n        reject = _ref3.reject;\n    return {\n      config: config,\n      resolve: resolve,\n      reject: reject\n    };\n  });\n  var require = window.require;\n\n  require.config(state.config);\n\n  require(['vs/editor/editor.main'], function (monaco) {\n    state.resolve(monaco);\n  }, function (error) {\n    state.reject(error);\n  });\n}\n\nvar wrapperPromise = new Promise(function (resolve, reject) {\n  return setState({\n    resolve: resolve,\n    reject: reject\n  });\n});\nvar monaco = {\n  config: config,\n  init: init\n};\n\nexport default monaco;\n"]},"metadata":{},"sourceType":"module"}