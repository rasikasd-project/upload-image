{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\One Life\\\\Projects_Dac\\\\upload-image\\\\ValidationProject\\\\src\\\\components\\\\csharp\\\\Csharp1.js\";\nimport React from 'react';\nimport { SiCsharp } from 'react-icons/si';\nimport Tutorial from '../Tutorial';\nimport icon from './c3.png';\nimport icon2 from './c2.png';\n\nconst Csharp1 = () => {\n  const logo = {\n    \"Lname\": icon,\n    \"Lname2\": icon2\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Tutorial, {\n      icons: logo.Lname,\n      name: \"C-SHARP\",\n      language: \"Csharp\",\n      next: \"/Csharp2\",\n      icon2: logo.Lname2,\n      theoryContent: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"C# Hello World - Your First C# Program\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 63\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The \\u201CHello World!\\u201D program is often the first program we see when we dive into a new language. It simply prints Hello World! on the output screen.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `// Hello World! program\nnamespace HelloWorld\n{\n    class Hello {         \n        static void Main(sting[] args)\n        {\n            System.Console.WriteLine(\"Hello World!\");\n        }\n    }\n}\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"C# Comments\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Comments can be used to explain C# code, and to make it more readable. It can also be used to prevent execution when testing alternative code. Single-line comments start with two forward slashes (//). Any text between // and the end of the line is ignored by C# (will not be executed). This example uses a single-line comment before a line of code:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This example uses a single-line comment at the end of a line of code:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 1\n        }, this), \"Example\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `Console.WriteLine(\"Hello World!\");  // This is a comment              \n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"C# Multi-line Comments\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Multi-line comments start with /* and ends with */. Any text between /* and */ will be ignored by C#. This example uses a multi-line comment (a comment block) to explain the code:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This example uses a single-line comment at the end of a line of code:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 1\n        }, this), \"Example\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `/* The code below will print the words Hello World\nto the screen, and it is amazing */\nConsole.WriteLine(\"Hello World!\");         \n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Alternative Hello World! implementation\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 64\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `// Hello World! program\nusing System;\n \nnamespace HelloWorld\n{\n    class Hello {         \n        static void Main(string[] args)\n        {\n            Console.WriteLine(\"Hello World!\");\n        }\n    }\n}\n\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Csharp1;\nexport default Csharp1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Csharp1\");","map":{"version":3,"sources":["C:/Users/One Life/Projects_Dac/upload-image/ValidationProject/src/components/csharp/Csharp1.js"],"names":["React","SiCsharp","Tutorial","icon","icon2","Csharp1","logo","Lname","Lname2"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,IAAP,MAAiB,UAAjB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAMC,IAAI,GAAC;AAAC,aAAQH,IAAT;AACD,cAASC;AADR,GAAX;AAGA,sBACI;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAIE,IAAI,CAACC,KAAxB;AAA+B,MAAA,IAAI,EAAG,SAAtC;AAAgD,MAAA,QAAQ,EAAG,QAA3D;AAAoE,MAAA,IAAI,EAAC,UAAzE;AAAoF,MAAA,KAAK,EAAED,IAAI,CAACE,MAAhG;AACC,MAAA,aAAa,eACV;AAAA,gCACI;AAAA,4EAA0C;AAAA;AAAA;AAAA;AAAA,kBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFL,eAGI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCACK;AAAA,sBACM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXyB;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAoBM;AAAA,iDAAe;AAAA;AAAA;AAAA;AAAA,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBN,eAqBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBL,eA8BhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BgB,0BAgCI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCACK;AAAA,sBACM;AAC/B;AAFyB;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBAhCJ,eAyCM;AAAA,4DAA0B;AAAA;AAAA;AAAA;AAAA,kBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzCN,eA0CK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1CL,eAiDhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjDgB,0BAmDI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCACK;AAAA,sBACM;AAC/B;AACA;AACA;AAJyB;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBAnDJ,eA+DI;AAAA,6EAA2C;AAAA;AAAA;AAAA;AAAA,kBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/DJ,eAiEI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCACK;AAAA,sBACM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdyB;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBAjEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqGH,CAzGD;;KAAMH,O;AA2GN,eAAeA,OAAf","sourcesContent":["import React from 'react'\r\nimport {SiCsharp} from 'react-icons/si'\r\nimport Tutorial from '../Tutorial'\r\nimport icon from './c3.png'\r\nimport icon2 from './c2.png'\r\n\r\n\r\nconst Csharp1 = () => {\r\n    const logo={\"Lname\":icon,\r\n              \"Lname2\":icon2\r\n            }\r\n    return (\r\n        <div>\r\n            <Tutorial icons = {logo.Lname} name = \"C-SHARP\" language = \"Csharp\" next=\"/Csharp2\" icon2={logo.Lname2}\r\n             theoryContent = {\r\n                <p>\r\n                    <h4>C# Hello World - Your First C# Program<hr/></h4>\r\n                     <p>The “Hello World!” program is often the first program we see when we dive into a new language. It simply prints Hello World! on the output screen.</p>\r\n                    <div class=\"card card-body\">\r\n                         <pre>\r\n                             {`// Hello World! program\r\nnamespace HelloWorld\r\n{\r\n    class Hello {         \r\n        static void Main(sting[] args)\r\n        {\r\n            System.Console.WriteLine(\"Hello World!\");\r\n        }\r\n    }\r\n}\r\n`}\r\n                         </pre>      \r\n                      </div>\r\n\r\n\r\n                      <h4>C# Comments<hr/></h4>\r\n                     <p>Comments can be used to explain C# code, and to make it more readable. It can also be used to prevent execution when testing alternative code.\r\n\r\nSingle-line comments start with two forward slashes (//).\r\n\r\nAny text between // and the end of the line is ignored by C# (will not be executed).\r\n\r\nThis example uses a single-line comment before a line of code:</p>\r\n\r\n\r\n<p>This example uses a single-line comment at the end of a line of code:</p>\r\n                     Example               \r\n                    <div class=\"card card-body\">\r\n                         <pre>\r\n                             {`Console.WriteLine(\"Hello World!\");  // This is a comment              \r\n`}\r\n                         </pre>      \r\n                      </div>\r\n \r\n\r\n\r\n                      <h4>C# Multi-line Comments<hr/></h4>\r\n                     <p>Multi-line comments start with /* and ends with */.\r\n\r\nAny text between /* and */ will be ignored by C#.\r\n\r\nThis example uses a multi-line comment (a comment block) to explain the code:</p>\r\n\r\n\r\n<p>This example uses a single-line comment at the end of a line of code:</p>\r\n                     Example               \r\n                    <div class=\"card card-body\">\r\n                         <pre>\r\n                             {`/* The code below will print the words Hello World\r\nto the screen, and it is amazing */\r\nConsole.WriteLine(\"Hello World!\");         \r\n`}\r\n                         </pre>      \r\n                      </div>\r\n\r\n\r\n                             \r\n\r\n                    <h4>Alternative Hello World! implementation<hr/></h4>\r\n                    \r\n                    <div class=\"card card-body\">\r\n                         <pre>\r\n                             {`// Hello World! program\r\nusing System;\r\n \r\nnamespace HelloWorld\r\n{\r\n    class Hello {         \r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n        }\r\n    }\r\n}\r\n\r\n`}\r\n                         </pre>      \r\n                      </div>\r\n\r\n                    \r\n\r\n                    \r\n                      \r\n                    \r\n                     \r\n                </p> \r\n             }\r\n             />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Csharp1\r\n"]},"metadata":{},"sourceType":"module"}