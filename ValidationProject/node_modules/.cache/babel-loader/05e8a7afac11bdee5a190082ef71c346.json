{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\One Life\\\\Desktop\\\\finalProject\\\\src\\\\components\\\\java\\\\Java4.js\";\nimport React from 'react';\nimport Tutorial from '../Tutorial';\nimport { SiJava } from 'react-icons/si';\nimport icon from './java9.png';\nimport icon2 from './java1.png';\n\nconst Java1 = () => {\n  const logo = {\n    \"Lname\": icon,\n    \"Lname2\": icon2\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Tutorial, {\n      icons: logo.Lname,\n      name: \"JAVA\",\n      language: \"java\",\n      next: \"/Java4\",\n      icon2: logo.Lname2,\n      theoryContent: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"TutorialPadding\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"Thead\",\n          children: [\"Java String\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 57\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"In Java, a string is a sequence of characters. For example, \\\"hello\\\" is a string containing a sequence of characters 'h', 'e', 'l', 'l', and 'o'.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"We use double quotes to represent a string in Java. For example,\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `// create a string\nString type = \"Java programming\";\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"Thead\",\n          children: [\"Create a String in Java\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 69\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `class Main {\n  public static void main(String[] args) {\n    \n    // create strings\n    String first = \"Java\";\n    String second = \"Python\";\n    String third = \"JavaScript\";\n\n    // print strings\n    System.out.println(first);   // print Java\n    System.out.println(second);  // print Python\n    System.out.println(third);   // print JavaScript\n  }\n}\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"Thead\",\n          children: [\"Java Parameterized Constructor\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 78\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 26\n        }, this), \"A Java constructor can also accept one or more parameters. Such constructors are known as parameterized constructors (constructor with parameters).\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `class Main {\n\nString languages;\n\n// constructor accepting single value\nMain(String lang) {\n  languages = lang;\n  System.out.println(languages + \" Programming Language\");\n}\n\npublic static void main(String[] args) {\n\n  // call constructor by passing a single value\n  Main obj1 = new Main(\"Java\");\n  Main obj2 = new Main(\"Python\");\n  Main obj3 = new Main(\"C\");\n}\n}\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"Thead\",\n          children: [\"Java String Operations\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"Thead\",\n          children: \" 1. Get Length of a String\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 23\n        }, this), \"To find the length of a string, we use the length() method of the String. For example,\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `class Main {\n  public static void main(String[] args) {\n\n    // create a string\n    String greet = \"Hello! World\";\n    System.out.println(\"String: \" + greet);\n\n    // get the length of greet\n    int length = greet.length();\n    System.out.println(\"Length: \" + length);\n  }\n}\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"Thead\",\n          children: \" 2. Join two Strings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 26\n        }, this), \"To find the length of a string, we use the length() method of the String. For example,\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `class Main {\n  public static void main(String[] args) {\n\n    // create first string\n    String first = \"Java \";\n    System.out.println(\"First String: \" + first);\n\n    // create second\n    String second = \"Programming\";\n    System.out.println(\"Second String: \" + second);\n\n    // join two strings\n    String joinedString = first.concat(second);\n    System.out.println(\"Joined String: \" + joinedString);\n  }\n}\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"Thead\",\n          children: \"3. Compare two Strings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 27\n        }, this), \"In Java, we can make comparisons between two strings using the equals() method. For example,\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `class Main {\n  public static void main(String[] args) {\n\n    // create 3 strings\n    String first = \"java programming\";\n    String second = \"java programming\";\n    String third = \"python programming\";\n\n    // compare first and second strings\n    boolean result1 = first.equals(second);\n    System.out.println(\"Strings first and second are equal: \" + result1);\n\n    // compare first and third strings\n    boolean result2 = first.equals(third);\n    System.out.println(\"Strings first and third are equal: \" + result2);\n  }\n}\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Java1;\nexport default Java1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Java1\");","map":{"version":3,"sources":["C:/Users/One Life/Desktop/finalProject/src/components/java/Java4.js"],"names":["React","Tutorial","SiJava","icon","icon2","Java1","logo","Lname","Lname2"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Tutorial from '../Tutorial'\r\nimport {SiJava} from 'react-icons/si'\r\nimport icon from './java9.png'\r\nimport icon2 from './java1.png'\r\n\r\nconst Java1 = () => {\r\n  const logo={\"Lname\":icon,\r\n              \"Lname2\":icon2\r\n            }\r\n    return (\r\n        <div>\r\n          <Tutorial icons = {logo.Lname} name = \"JAVA\" language = \"java\" next=\"/Java4\" icon2={logo.Lname2}\r\n          theoryContent = {\r\n                   <p className=\"TutorialPadding\">\r\n                       <h3 className=\"Thead\">Java String<hr/></h3>\r\n                        <p>In Java, a string is a sequence of characters. For example, \"hello\" is a string containing a sequence of characters 'h', 'e', 'l', 'l', and 'o'.</p>\r\n                       <p>We use double quotes to represent a string in Java. For example,</p>\r\n                       <div class=\"card card-body\">\r\n                            <pre>\r\n                                {`// create a string\r\nString type = \"Java programming\";\r\n`}\r\n                            </pre>      \r\n                         </div>\r\n    \r\n   \r\n                                \r\n  \r\n                       <h4 className=\"Thead\">Create a String in Java<hr/></h4>\r\n                       \r\n                       <div class=\"card card-body\">\r\n                            <pre>\r\n                                {`class Main {\r\n  public static void main(String[] args) {\r\n    \r\n    // create strings\r\n    String first = \"Java\";\r\n    String second = \"Python\";\r\n    String third = \"JavaScript\";\r\n\r\n    // print strings\r\n    System.out.println(first);   // print Java\r\n    System.out.println(second);  // print Python\r\n    System.out.println(third);   // print JavaScript\r\n  }\r\n}\r\n`}\r\n                            </pre>      \r\n                         </div>\r\n\r\n                         <h4 className=\"Thead\">Java Parameterized Constructor<hr/></h4>\r\n                         A Java constructor can also accept one or more parameters.\r\n                        Such constructors are known as parameterized constructors (constructor with parameters).\r\n\r\n\r\n                       <div class=\"card card-body\">\r\n\r\n                            <pre>\r\n                                {`class Main {\r\n\r\nString languages;\r\n\r\n// constructor accepting single value\r\nMain(String lang) {\r\n  languages = lang;\r\n  System.out.println(languages + \" Programming Language\");\r\n}\r\n\r\npublic static void main(String[] args) {\r\n\r\n  // call constructor by passing a single value\r\n  Main obj1 = new Main(\"Java\");\r\n  Main obj2 = new Main(\"Python\");\r\n  Main obj3 = new Main(\"C\");\r\n}\r\n}\r\n`}\r\n                            </pre>      \r\n                         </div>\r\n\r\n\r\n\r\n                         <h4 className=\"Thead\">Java String Operations<hr/></h4>\r\n                      <h5 className=\"Thead\"> 1. Get Length of a String</h5>\r\n                      To find the length of a string, we use the length() method of the String. For example,\r\n                       <div class=\"card card-body\">\r\n                            <pre>\r\n                                {`class Main {\r\n  public static void main(String[] args) {\r\n\r\n    // create a string\r\n    String greet = \"Hello! World\";\r\n    System.out.println(\"String: \" + greet);\r\n\r\n    // get the length of greet\r\n    int length = greet.length();\r\n    System.out.println(\"Length: \" + length);\r\n  }\r\n}\r\n`}\r\n                            </pre>      \r\n                         </div>\r\n\r\n                         <h5 className=\"Thead\"> 2. Join two Strings</h5>\r\n                      To find the length of a string, we use the length() method of the String. For example,\r\n                       <div class=\"card card-body\">\r\n                            <pre>\r\n                                {`class Main {\r\n  public static void main(String[] args) {\r\n\r\n    // create first string\r\n    String first = \"Java \";\r\n    System.out.println(\"First String: \" + first);\r\n\r\n    // create second\r\n    String second = \"Programming\";\r\n    System.out.println(\"Second String: \" + second);\r\n\r\n    // join two strings\r\n    String joinedString = first.concat(second);\r\n    System.out.println(\"Joined String: \" + joinedString);\r\n  }\r\n}\r\n`}\r\n                            </pre>      \r\n                         </div>\r\n\r\n\r\n\r\n                          <h5 className=\"Thead\">3. Compare two Strings</h5>\r\n                          In Java, we can make comparisons between two strings using the equals() method. For example,\r\n                       <div class=\"card card-body\">\r\n                            <pre>\r\n                                {`class Main {\r\n  public static void main(String[] args) {\r\n\r\n    // create 3 strings\r\n    String first = \"java programming\";\r\n    String second = \"java programming\";\r\n    String third = \"python programming\";\r\n\r\n    // compare first and second strings\r\n    boolean result1 = first.equals(second);\r\n    System.out.println(\"Strings first and second are equal: \" + result1);\r\n\r\n    // compare first and third strings\r\n    boolean result2 = first.equals(third);\r\n    System.out.println(\"Strings first and third are equal: \" + result2);\r\n  }\r\n}\r\n`}\r\n                            </pre>      \r\n                         </div>\r\n\r\n                       \r\n                         \r\n                       \r\n                        \r\n                   </p> \r\n                }\r\n                />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Java1\r\n"]},"metadata":{},"sourceType":"module"}