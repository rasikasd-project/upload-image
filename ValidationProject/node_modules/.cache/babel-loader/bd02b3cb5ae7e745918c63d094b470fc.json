{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\One Life\\\\Desktop\\\\finalProject\\\\src\\\\components\\\\csharp\\\\Csharp3.js\";\nimport React from 'react';\nimport { SiCsharp } from 'react-icons/si';\nimport Tutorial from '../Tutorial';\nimport icon from './c1.png';\nimport icon2 from './c2.png';\n\nconst Csharp1 = () => {\n  const logo = {\n    \"Lname\": icon,\n    \"Lname2\": icon2\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Tutorial, {\n      icons: logo.Lname,\n      name: \"C-SHARP\",\n      language: \"Csharp\",\n      next: \"/Csharp4\",\n      icon2: logo.Lname2,\n      theoryContent: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"C# Operators\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Operators are symbols that are used to perform operations on operands. Operands may be variables and/or constants.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"1. Basic Assignment Operator\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 53\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), \"Basic assignment operator (=) is used to assign values to variables. For example,\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `double x;\nx = 50.05;`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Here, 50.05 is assigned to x.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"2. Arithmetic Operators\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), \"Arithmetic operators are used to perform arithmetic operations such as addition, subtraction, multiplication, division, etc. For example,\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `int x = 5;\nint y = 10;\nint z = x + y;// z = 15\n\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"3. Relational Operators\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 1\n        }, this), \"Relational operators are used to check the relationship between two operands. If the relationship is true the result will be true, otherwise it will result in false.\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `C# Relational Operators\nOperator\tOperator Name\tExample\n==\tEqual to\t6 == 4 evaluates to false\n>\tGreater than\t3 > -1 evaluates to true\n<\tLess than\t5 < 3 evaluates to false\n>=\tGreater than or equal to\t4 >= 4 evaluates to true\n<=\tLess than or equal to\t5 <= 3 evaluates to false\n!=\tNot equal to\t10 != 2 evaluates to true\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Csharp1;\nexport default Csharp1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Csharp1\");","map":{"version":3,"sources":["C:/Users/One Life/Desktop/finalProject/src/components/csharp/Csharp3.js"],"names":["React","SiCsharp","Tutorial","icon","icon2","Csharp1","logo","Lname","Lname2"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,IAAP,MAAiB,UAAjB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAMC,IAAI,GAAC;AAAC,aAAQH,IAAT;AACD,cAASC;AADR,GAAX;AAGA,sBACI;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAIE,IAAI,CAACC,KAAxB;AAA+B,MAAA,IAAI,EAAG,SAAtC;AAAgD,MAAA,QAAQ,EAAG,QAA3D;AAAoE,MAAA,IAAI,EAAC,UAAzE;AAAoF,MAAA,KAAK,EAAED,IAAI,CAACE,MAAhG;AACC,MAAA,aAAa,eACV;AAAA,gCACI;AAAA,kDAAgB;AAAA;AAAA;AAAA;AAAA,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFL,eAKI;AAAA,kEAAgC;AAAA;AAAA;AAAA;AAAA,kBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,oGAOI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCACK;AAAA,sBACM;AAC/B;AAFyB;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAcf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAde,eAiBI;AAAA,6DAA2B;AAAA;AAAA;AAAA;AAAA,kBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBJ,4JAoBI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCACK;AAAA,sBACM;AAC/B;AACA;AACA;AACA;AALyB;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBApBJ,eA+BhB;AAAA,6DAA2B;AAAA;AAAA;AAAA;AAAA,kBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/BgB,wLAiCI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCACK;AAAA,sBACM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATyB;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgEH,CApED;;KAAMH,O;AAsEN,eAAeA,OAAf","sourcesContent":["\r\nimport React from 'react'\r\nimport {SiCsharp} from 'react-icons/si'\r\nimport Tutorial from '../Tutorial'\r\nimport icon from './c1.png'\r\nimport icon2 from './c2.png'\r\n\r\nconst Csharp1 = () => {\r\n    const logo={\"Lname\":icon,\r\n              \"Lname2\":icon2\r\n            }\r\n    return (\r\n        <div>\r\n            <Tutorial icons = {logo.Lname} name = \"C-SHARP\" language = \"Csharp\" next=\"/Csharp4\" icon2={logo.Lname2}\r\n             theoryContent = {\r\n                <p>\r\n                    <h4>C# Operators<hr/></h4>\r\n                     <p>Operators are symbols that are used to perform operations on operands. Operands may be variables and/or constants.</p>\r\n\r\n\r\n                    <h5>1. Basic Assignment Operator<hr/></h5>\r\n                    Basic assignment operator (=) is used to assign values to variables. For example,\r\n                    <div class=\"card card-body\">\r\n                         <pre>\r\n                             {`double x;\r\nx = 50.05;`}\r\n                         </pre>\r\n                         </div>\r\n\r\n <p>Here, 50.05 is assigned to x.</p>\r\n                             \r\n\r\n                    <h5>2. Arithmetic Operators<hr/></h5>\r\n                    Arithmetic operators are used to perform arithmetic operations such as addition, subtraction, multiplication, division, etc.\r\n                    For example, \r\n                    <div class=\"card card-body\">\r\n                         <pre>\r\n                             {`int x = 5;\r\nint y = 10;\r\nint z = x + y;// z = 15\r\n\r\n`}\r\n                         </pre>      \r\n                      </div>\r\n\r\n\r\n<h5>3. Relational Operators<hr/></h5>\r\nRelational operators are used to check the relationship between two operands. If the relationship is true the result will be true, otherwise it will result in false.      \r\n                    <div class=\"card card-body\">\r\n                         <pre>\r\n                             {`C# Relational Operators\r\nOperator\tOperator Name\tExample\r\n==\tEqual to\t6 == 4 evaluates to false\r\n>\tGreater than\t3 > -1 evaluates to true\r\n<\tLess than\t5 < 3 evaluates to false\r\n>=\tGreater than or equal to\t4 >= 4 evaluates to true\r\n<=\tLess than or equal to\t5 <= 3 evaluates to false\r\n!=\tNot equal to\t10 != 2 evaluates to true\r\n`}\r\n                         </pre>      \r\n                      </div>\r\n\r\n                    \r\n\r\n                    \r\n                      \r\n                    \r\n                     \r\n                </p> \r\n             }\r\n             />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Csharp1\r\n"]},"metadata":{},"sourceType":"module"}