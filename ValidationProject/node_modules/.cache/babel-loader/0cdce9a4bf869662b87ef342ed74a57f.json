{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\One Life\\\\Desktop\\\\finalProject\\\\src\\\\components\\\\java\\\\Java3.js\";\nimport React from 'react';\nimport Tutorial from '../Tutorial';\nimport { SiJava } from 'react-icons/si';\nimport icon from './java9.png';\nimport icon2 from './java1.png';\n\nconst Java1 = () => {\n  const logo = {\n    \"Lname\": icon,\n    \"Lname2\": icon2\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Tutorial, {\n      icons: logo.Lname,\n      name: \"JAVA\",\n      language: \"java\",\n      next: \"/Java4\",\n      icon2: logo.Lname2,\n      theoryContent: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"TutorialPadding\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"Thead\",\n          children: [\"Java Constructors\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 63\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"In this tutorial, we will learn about Java constructors, their types, and how to use them with the help of examples.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"Thead\",\n          children: [\"What is a Constructor?\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 68\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"A constructor in Java is similar to a method that is invoked when an object of the class is created.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Unlike Java methods, a constructor has the same name as that of the class and does not have any return type. For example,\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `class Test {\n  Test() {\n    // constructor body\n  }\n}\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Here, Test() is a constructor. It has the same name as that of the class and doesn't have a return type.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"Thead\",\n          children: [\"Constructor Parameters\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Constructors can also take parameters, which is used to initialize attributes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The following example adds an int y parameter to the constructor. Inside the constructor we set x to y (x=y). When we call the constructor, we pass a parameter to the constructor (5), which will set the value of x to 5:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `public class Main {\n  int x;\n\n  public Main(int y) {\n    x = y;\n  }\n\n  public static void main(String[] args) {\n    Main myObj = new Main(5);\n    System.out.println(myObj.x);\n  }\n}\n\n// Outputs 5\n\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"Thead\",\n          children: [\"Java No-Arg Constructors\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 24\n        }, this), \"Similar to methods, a Java constructor may or may not have any parameters (arguments). If a constructor does not accept any parameters, it is known as a no-argument constructor.\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `private Constructor() {\n   // body of the constructor\n}\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Java Parameterized Constructor\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 26\n        }, this), \"A Java constructor can also accept one or more parameters. Such constructors are known as parameterized constructors (constructor with parameters).\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `class Main {\n\nString languages;\n\n// constructor accepting single value\nMain(String lang) {\n  languages = lang;\n  System.out.println(languages + \" Programming Language\");\n}\n\npublic static void main(String[] args) {\n\n  // call constructor by passing a single value\n  Main obj1 = new Main(\"Java\");\n  Main obj2 = new Main(\"Python\");\n  Main obj3 = new Main(\"C\");\n}\n}\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"Thead\",\n          children: [\"Java No-Arg Constructors\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 72\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 26\n        }, this), \"Similar to methods, a Java constructor may or may not have any parameters (arguments). If a constructor does not accept any parameters, it is known as a no-argument constructor.\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `private Constructor() {\n   // body of the constructor\n}\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"Thead\",\n          children: [\"Java Default Constructor\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 72\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 26\n        }, this), \"If we do not create any constructor, the Java compiler automatically create a no-arg constructor during the execution of the program. This constructor is called default constructor.\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `class Main {\n\nint a;\nboolean b;\n\npublic static void main(String[] args) {\n\n  // A default constructor is called\n  Main obj = new Main();\n\n  System.out.println(\"Default Value:\");\n  System.out.println(\"a = \" + obj.a);\n  System.out.println(\"b = \" + obj.b);\n}\n}\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Java1;\nexport default Java1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Java1\");","map":{"version":3,"sources":["C:/Users/One Life/Desktop/finalProject/src/components/java/Java3.js"],"names":["React","Tutorial","SiJava","icon","icon2","Java1","logo","Lname","Lname2"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAAQC,MAAR,QAAqB,gBAArB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,IAAI,GAAC;AAAC,aAAQH,IAAT;AACC,cAASC;AADV,GAAX;AAGE,sBACI;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAIE,IAAI,CAACC,KAAxB;AAA+B,MAAA,IAAI,EAAG,MAAtC;AAA6C,MAAA,QAAQ,EAAG,MAAxD;AAA+D,MAAA,IAAI,EAAC,QAApE;AAA6E,MAAA,KAAK,EAAED,IAAI,CAACE,MAAzF;AACA,MAAA,aAAa,eACJ;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA,uDAAuC;AAAA;AAAA;AAAA;AAAA,kBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFL,eAMI;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA,4DAA4C;AAAA;AAAA;AAAA;AAAA,kBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCACK;AAAA,sBACM;AAClC;AACA;AACA;AACA;AACA;AAN4B;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBATJ,eAoBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBgB,eAwBhB;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA,4DAA4C;AAAA;AAAA;AAAA;AAAA,kBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBgB,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzBJ,eA0BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BJ,eA6BI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCACK;AAAA,sBACM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhB4B;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBA7BJ,eAyDI;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA,8DAA8C;AAAA;AAAA;AAAA;AAAA,kBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzDJ,oMA6DI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCACK;AAAA,sBACM;AAClC;AACA;AACA;AAJ4B;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBA7DJ,eAsEM;AAAA,oEAAkC;AAAA;AAAA;AAAA;AAAA,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtEN,sKA2EI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCAEK;AAAA,sBACM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnB4B;AAAA;AAAA;AAAA;AAAA;AAFL;AAAA;AAAA;AAAA;AAAA,gBA3EJ,eAwGM;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA,8DAA8C;AAAA;AAAA;AAAA;AAAA,kBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxGN,oMA4GI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCACK;AAAA,sBACM;AAClC;AACA;AACA;AAJ4B;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBA5GJ,eAqHM;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA,8DAA8C;AAAA;AAAA;AAAA;AAAA,kBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,gBArHN,wMA4HI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCAEK;AAAA,sBACM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhB4B;AAAA;AAAA;AAAA;AAAA;AAFL;AAAA;AAAA;AAAA;AAAA,gBA5HJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAgKH,CApKD;;KAAMH,K;AAsKN,eAAeA,KAAf","sourcesContent":["import React from 'react'\r\nimport Tutorial from '../Tutorial'\r\nimport {SiJava} from 'react-icons/si'\r\nimport icon from './java9.png'\r\nimport icon2 from './java1.png'\r\n\r\nconst Java1 = () => {\r\n  const logo={\"Lname\":icon,\r\n              \"Lname2\":icon2\r\n            }\r\n    return (\r\n        <div>\r\n          <Tutorial icons = {logo.Lname} name = \"JAVA\" language = \"java\" next=\"/Java4\" icon2={logo.Lname2}\r\n          theoryContent = {\r\n                   <p className=\"TutorialPadding\">\r\n                       <h3 className=\"Thead\">Java Constructors<hr/></h3>\r\n                        <p>In this tutorial, we will learn about Java constructors, their types, and how to use them with the help of examples.</p>\r\n\r\n                      \r\n\r\n                       <h4 className=\"Thead\">What is a Constructor?<hr/></h4>\r\n                       <p>A constructor in Java is similar to a method that is invoked when an object of the class is created.</p>\r\n                       <p>Unlike Java methods, a constructor has the same name as that of the class and does not have any return type. For example,</p>\r\n                       <div class=\"card card-body\">\r\n                            <pre>\r\n                                {`class Test {\r\n  Test() {\r\n    // constructor body\r\n  }\r\n}\r\n`}\r\n                            </pre>      \r\n                         </div>\r\n    \r\n   <p>Here, Test() is a constructor. It has the same name as that of the class and doesn't have a return type.</p>\r\n                                \r\n\r\n\r\n   <h4 className=\"Thead\">Constructor Parameters<hr/></h4>\r\n                       <p>Constructors can also take parameters, which is used to initialize attributes.</p>\r\n                       <p>The following example adds an int y parameter to the constructor. Inside the constructor we set x to y (x=y). When we call the constructor, we pass a parameter to the constructor (5), which will set the value of x to 5:\r\n\r\n</p>\r\n                       <div class=\"card card-body\">\r\n                            <pre>\r\n                                {`public class Main {\r\n  int x;\r\n\r\n  public Main(int y) {\r\n    x = y;\r\n  }\r\n\r\n  public static void main(String[] args) {\r\n    Main myObj = new Main(5);\r\n    System.out.println(myObj.x);\r\n  }\r\n}\r\n\r\n// Outputs 5\r\n\r\n`}\r\n                            </pre>      \r\n                         </div>\r\n    \r\n\r\n                                \r\n  \r\n              \r\n\r\n\r\n\r\n                       <h4 className=\"Thead\">Java No-Arg Constructors<hr/></h4>\r\n                       Similar to methods, a Java constructor may or may not have any parameters (arguments).\r\n                        If a constructor does not accept any parameters, it is known as a no-argument constructor.\r\n                      \r\n                       <div class=\"card card-body\">\r\n                            <pre>\r\n                                {`private Constructor() {\r\n   // body of the constructor\r\n}\r\n`}\r\n                            </pre>      \r\n                         </div>\r\n\r\n                         <h4>Java Parameterized Constructor<hr/></h4>\r\n                         A Java constructor can also accept one or more parameters.\r\n                        Such constructors are known as parameterized constructors (constructor with parameters).\r\n\r\n\r\n                       <div class=\"card card-body\">\r\n\r\n                            <pre>\r\n                                {`class Main {\r\n\r\nString languages;\r\n\r\n// constructor accepting single value\r\nMain(String lang) {\r\n  languages = lang;\r\n  System.out.println(languages + \" Programming Language\");\r\n}\r\n\r\npublic static void main(String[] args) {\r\n\r\n  // call constructor by passing a single value\r\n  Main obj1 = new Main(\"Java\");\r\n  Main obj2 = new Main(\"Python\");\r\n  Main obj3 = new Main(\"C\");\r\n}\r\n}\r\n`}\r\n                            </pre>      \r\n                         </div>\r\n\r\n\r\n\r\n\r\n\r\n                         <h4 className=\"Thead\">Java No-Arg Constructors<hr/></h4>\r\n                       Similar to methods, a Java constructor may or may not have any parameters (arguments).\r\n                        If a constructor does not accept any parameters, it is known as a no-argument constructor.\r\n                      \r\n                       <div class=\"card card-body\">\r\n                            <pre>\r\n                                {`private Constructor() {\r\n   // body of the constructor\r\n}\r\n`}\r\n                            </pre>      \r\n                         </div>\r\n\r\n                         <h4 className=\"Thead\">Java Default Constructor<hr/></h4>\r\n                         If we do not create any constructor, the Java compiler automatically create a no-arg constructor during the execution of the program. \r\n                         This constructor is called default constructor.\r\n\r\n\r\n\r\n\r\n                       <div class=\"card card-body\">\r\n\r\n                            <pre>\r\n                                {`class Main {\r\n\r\nint a;\r\nboolean b;\r\n\r\npublic static void main(String[] args) {\r\n\r\n  // A default constructor is called\r\n  Main obj = new Main();\r\n\r\n  System.out.println(\"Default Value:\");\r\n  System.out.println(\"a = \" + obj.a);\r\n  System.out.println(\"b = \" + obj.b);\r\n}\r\n}\r\n`}\r\n                            </pre>      \r\n                         </div>\r\n                         \r\n\r\n                         \r\n                       \r\n                        \r\n                   </p> \r\n                }\r\n                />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Java1\r\n"]},"metadata":{},"sourceType":"module"}