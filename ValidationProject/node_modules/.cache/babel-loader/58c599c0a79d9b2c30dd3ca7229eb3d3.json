{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\One Life\\\\Desktop\\\\finalProject\\\\src\\\\components\\\\csharp\\\\Csharp2.js\";\nimport React from 'react';\nimport { SiCsharp } from 'react-icons/si';\nimport Tutorial from '../Tutorial';\nimport icon from './c3.png';\nimport icon2 from './c2.png';\n\nconst Csharp1 = () => {\n  const logo = {\n    \"Lname\": icon,\n    \"Lname2\": icon2\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Tutorial, {\n      icons: logo.Lname,\n      name: \"C-SHARP\",\n      language: \"Csharp\",\n      next: \"/Csharp3\",\n      icon2: logo.Lname2,\n      theoryContent: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"C# Variables and (Primitive) Data Types\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 64\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"A variable is a symbolic name given to a memory location. Variables are used to store data in a computer program.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"How to declare variables in C#?\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 56\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), \"Here's an example to declare a variable in C#.\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `int age;\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"However, the variable can also be initialized to some value during declaration. For example,\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 117\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `int age = 24;\n\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Here, a variable age of type int is declared and initialized to 24 at the same time.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Since, it\\u2019s a variable, we can change the value of variables as well. For example,\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 87\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `int age = 24;\nage = 35;\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Integer Types\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The int data type can store whole numbers from -2147483648 to 2147483647. In general, and in our tutorial, the int data type is the preferred data type when we create variables with a numeric value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), \"Example\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `int myNum = 100000;\nConsole.WriteLine(myNum);\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Long\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The long data type can store whole numbers from -9223372036854775808 to 9223372036854775807. This is used when int is not large enough to store the value. Note that you should end the value with an \\\"L\\\":\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), \"Example\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `long myNum = 15000000000L;\nConsole.WriteLine(myNum);\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Floating Point Types\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You should use a floating point type whenever you need a number with a decimal, such as 9.99 or 3.14515.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), \"Example\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `int myNum = 100000;\nConsole.WriteLine(myNum);\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Float\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The float data type can store fractional numbers from 3.4e\\u2212038 to 3.4e+038. Note that you should end the value with an \\\"F\\\":\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), \"Example\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `float myNum = 5.75F;\nConsole.WriteLine(myNum);\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Double\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The double data type can store fractional numbers from 1.7e\\u2212308 to 1.7e+308. Note that you can end the value with a \\\"D\\\" (although not required):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), \"Example\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `double myNum = 19.99D;\nConsole.WriteLine(myNum);\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Csharp1;\nexport default Csharp1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Csharp1\");","map":{"version":3,"sources":["C:/Users/One Life/Desktop/finalProject/src/components/csharp/Csharp2.js"],"names":["React","SiCsharp","Tutorial","icon","icon2","Csharp1","logo","Lname","Lname2"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {SiCsharp} from 'react-icons/si'\r\nimport Tutorial from '../Tutorial'\r\nimport icon from './c3.png'\r\nimport icon2 from './c2.png'\r\n\r\nconst Csharp1 = () => {\r\n    const logo={\"Lname\":icon,\r\n              \"Lname2\":icon2\r\n            }\r\n    return (\r\n        <div>\r\n            <Tutorial icons = {logo.Lname} name = \"C-SHARP\" language = \"Csharp\" next=\"/Csharp3\" icon2={logo.Lname2}\r\n             theoryContent = {\r\n                <p>\r\n                    <h4>C# Variables and (Primitive) Data Types<hr/></h4>\r\n                     <p>A variable is a symbolic name given to a memory location. Variables are used to store data in a computer program.</p>\r\n\r\n\r\n                    <h5>How to declare variables in C#?<hr/></h5>\r\n                    Here's an example to declare a variable in C#.\r\n                    <div class=\"card card-body\">\r\n                         <pre>\r\n                             {`int age;\r\n`}\r\n                         </pre>\r\n                         </div>\r\n\r\n \r\n\r\n                             \r\n\r\n                    <h5>However, the variable can also be initialized to some value during declaration. For example,<hr/></h5>\r\n                    \r\n                    <div class=\"card card-body\">\r\n                         <pre>\r\n                             {`int age = 24;\r\n\r\n`}\r\n                         </pre>      \r\n                      </div>\r\n<p>Here, a variable age of type int is declared and initialized to 24 at the same time.</p>\r\n\r\n\r\n<h5>Since, it’s a variable, we can change the value of variables as well. For example,<hr/></h5>\r\n                    \r\n                    <div class=\"card card-body\">\r\n                         <pre>\r\n                             {`int age = 24;\r\nage = 35;\r\n`}\r\n                         </pre>      \r\n                      </div>\r\n\r\n                    \r\n                      <h5>Integer Types<hr/></h5>\r\n                    <p>The int data type can store whole numbers from -2147483648 to 2147483647. In general, and in our tutorial, the int data type is the preferred data type when we create variables with a numeric value\r\n                    </p>\r\n                    Example\r\n                    <div class=\"card card-body\">\r\n                         <pre>\r\n                             {`int myNum = 100000;\r\nConsole.WriteLine(myNum);\r\n`}\r\n                         </pre>\r\n                         </div>\r\n\r\n\r\n                    <h5>Long<hr/></h5>\r\n                    <p>\r\n                    The long data type can store whole numbers from -9223372036854775808 to 9223372036854775807. This is used when int is not large enough to store the value. Note that you should end the value with an \"L\":\r\n                    </p>\r\n                    Example\r\n                    <div class=\"card card-body\">\r\n                         <pre>\r\n                             {`long myNum = 15000000000L;\r\nConsole.WriteLine(myNum);\r\n`}\r\n                         </pre>\r\n                         </div>\r\n\r\n \r\n\r\n\r\n                         <h5>Floating Point Types<hr/></h5>\r\n                    <p>You should use a floating point type whenever you need a number with a decimal, such as 9.99 or 3.14515.</p>\r\n                    Example\r\n                    <div class=\"card card-body\">\r\n                         <pre>\r\n                             {`int myNum = 100000;\r\nConsole.WriteLine(myNum);\r\n`}\r\n                         </pre>\r\n                         </div>\r\n\r\n\r\n                    <h5>Float<hr/></h5>\r\n                    <p>\r\n                    The float data type can store fractional numbers from 3.4e−038 to 3.4e+038. Note that you should end the value with an \"F\":\r\n                    </p>\r\n                    Example\r\n                    <div class=\"card card-body\">\r\n                         <pre>\r\n                             {`float myNum = 5.75F;\r\nConsole.WriteLine(myNum);\r\n`}\r\n                         </pre>\r\n                         </div>\r\n\r\n                         <h5>Double<hr/></h5>\r\n                    <p>\r\n                    The double data type can store fractional numbers from 1.7e−308 to 1.7e+308. Note that you can end the value with a \"D\" (although not required):\r\n                    </p>\r\n                    Example\r\n                    <div class=\"card card-body\">\r\n                         <pre>\r\n                             {`double myNum = 19.99D;\r\nConsole.WriteLine(myNum);\r\n`}\r\n                         </pre>\r\n                         </div>\r\n\r\n \r\n                    \r\n                      \r\n                    \r\n                     \r\n                </p> \r\n             }\r\n             />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Csharp1\r\n"]},"metadata":{},"sourceType":"module"}