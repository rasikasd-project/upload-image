{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\One Life\\\\Projects_Dac\\\\upload-image\\\\ValidationProject\\\\src\\\\components\\\\csharp\\\\Csharp4.js\";\nimport React from 'react';\nimport { SiCsharp } from 'react-icons/si';\nimport Tutorial from '../Tutorial';\nimport icon from './c1.png';\nimport icon2 from './c2.png';\n\nconst Csharp1 = () => {\n  const logo = {\n    \"Lname\": icon,\n    \"Lname2\": icon2\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Tutorial, {\n      icons: logo.Lname,\n      name: \"C-SHARP\",\n      language: \"Csharp\",\n      next: \"/Csharp4\",\n      icon2: logo.Lname2,\n      theoryContent: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"C# Basic Input and Output\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"In this tutorial, we will learn how to take input from user and and display output in C# using various methods\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"C# Output\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), \"In order to output something in C#, we can use\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `System.Console.WriteLine() OR\nSystem.Console.Write()`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Here, System is a namespace, Console is a class within namespace System and WriteLine and Write are methods of class Console.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Example 1: Printing String using WriteLine()\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 69\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `using System;\n \n namespace Sample\n {\n     class Test\n     {\n         public static void Main(string[] args)\n         {\n             Console.WriteLine(\"C# is cool\");\n         }\n     }\n }\n \n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Difference between WriteLine() and Write() method\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 54\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 1\n        }, this), \"The main difference between WriteLine() and Write() is that the Write() method only prints the string provided to it, while the WriteLine() method prints the string and moves to the start of next line as well.\", /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Example 2: How to use WriteLine() and Write() method?\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 78\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `using System;\n \n namespace Sample\n {\n     class Test\n     {\n         public static void Main(string[] args)\n         {\n             Console.WriteLine(\"Prints on \");\n             Console.WriteLine(\"New line\");\n \n             Console.Write(\"Prints on \");\n             Console.Write(\"Same line\");\n         }\n     }\n }\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Csharp1;\nexport default Csharp1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Csharp1\");","map":{"version":3,"sources":["C:/Users/One Life/Projects_Dac/upload-image/ValidationProject/src/components/csharp/Csharp4.js"],"names":["React","SiCsharp","Tutorial","icon","icon2","Csharp1","logo","Lname","Lname2"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,IAAP,MAAiB,UAAjB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAMC,IAAI,GAAC;AAAC,aAAQH,IAAT;AACD,cAASC;AADR,GAAX;AAGA,sBACI;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAIE,IAAI,CAACC,KAAxB;AAA+B,MAAA,IAAI,EAAG,SAAtC;AAAgD,MAAA,QAAQ,EAAG,QAA3D;AAAoE,MAAA,IAAI,EAAC,UAAzE;AAAoF,MAAA,KAAK,EAAED,IAAI,CAACE,MAAhG;AACC,MAAA,aAAa,eACV;AAAA,gCACI;AAAA,+DAA6B;AAAA;AAAA;AAAA;AAAA,kBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFL,eAKI;AAAA,+CAAa;AAAA;AAAA;AAAA;AAAA,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,iEAOI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCACK;AAAA,sBACM;AAC/B;AAFyB;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAcf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAde,eAmBI;AAAA,kFAAgD;AAAA;AAAA;AAAA;AAAA,kBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ,eAqBI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCACK;AAAA,sBACM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdyB;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBArBJ,eAyChB;AAAA,uFAAqD;AAAA;AAAA;AAAA;AAAA,kBAArD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzCgB,oOA2CI;AAAA,2FAAyD;AAAA;AAAA;AAAA;AAAA,kBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3CJ,eA6CI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCACK;AAAA,sBACM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjByB;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBA7CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoFH,CAxFD;;KAAMH,O;AA0FN,eAAeA,OAAf","sourcesContent":["\r\nimport React from 'react'\r\nimport {SiCsharp} from 'react-icons/si'\r\nimport Tutorial from '../Tutorial'\r\nimport icon from './c1.png'\r\nimport icon2 from './c2.png'\r\n\r\nconst Csharp1 = () => {\r\n    const logo={\"Lname\":icon,\r\n              \"Lname2\":icon2\r\n            }\r\n    return (\r\n        <div>\r\n            <Tutorial icons = {logo.Lname} name = \"C-SHARP\" language = \"Csharp\" next=\"/Csharp4\" icon2={logo.Lname2}\r\n             theoryContent = {\r\n                <p>\r\n                    <h4>C# Basic Input and Output<hr/></h4>\r\n                     <p>In this tutorial, we will learn how to take input from user and and display output in C# using various methods</p>\r\n\r\n\r\n                    <h5>C# Output<hr/></h5>\r\n                    In order to output something in C#, we can use\r\n                    <div class=\"card card-body\">\r\n                         <pre>\r\n                             {`System.Console.WriteLine() OR\r\nSystem.Console.Write()`}\r\n                         </pre>\r\n                         </div>\r\n\r\n <p>Here, System is a namespace, Console is a class within namespace System and WriteLine and Write are methods of class Console.\r\n\r\n</p>\r\n                             \r\n\r\n                    <h5>Example 1: Printing String using WriteLine()<hr/></h5>\r\n                 \r\n                    <div class=\"card card-body\">\r\n                         <pre>\r\n                             {`using System;\r\n \r\n namespace Sample\r\n {\r\n     class Test\r\n     {\r\n         public static void Main(string[] args)\r\n         {\r\n             Console.WriteLine(\"C# is cool\");\r\n         }\r\n     }\r\n }\r\n \r\n`}\r\n                         </pre>      \r\n                      </div>\r\n\r\n\r\n<h5>Difference between WriteLine() and Write() method<hr/></h5>\r\nThe main difference between WriteLine() and Write() is that the Write() method only prints the string provided to it, while the WriteLine() method prints the string and moves to the start of next line as well.\r\n                    <h5>Example 2: How to use WriteLine() and Write() method?<hr/></h5>\r\n\r\n                    <div class=\"card card-body\">\r\n                         <pre>\r\n                             {`using System;\r\n \r\n namespace Sample\r\n {\r\n     class Test\r\n     {\r\n         public static void Main(string[] args)\r\n         {\r\n             Console.WriteLine(\"Prints on \");\r\n             Console.WriteLine(\"New line\");\r\n \r\n             Console.Write(\"Prints on \");\r\n             Console.Write(\"Same line\");\r\n         }\r\n     }\r\n }\r\n`}\r\n                         </pre>      \r\n                      </div>\r\n\r\n                    \r\n\r\n                    \r\n                      \r\n                    \r\n                     \r\n                </p> \r\n             }\r\n             />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Csharp1\r\n"]},"metadata":{},"sourceType":"module"}