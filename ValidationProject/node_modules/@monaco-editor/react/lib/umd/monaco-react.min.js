!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?factory(exports,require("@monaco-editor/loader"),require("react"),require("prop-types")):"function"==typeof define&&define.amd?define(["exports","@monaco-editor/loader","react","prop-types"],factory):factory((global="undefined"!=typeof globalThis?globalThis:global||self).monaco_react={},global.monaco_loader,global.React,global.PropTypes)}(this,(function(exports,monaco,React,PropTypes){"use strict";function _interopDefaultLegacy(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var monaco__default=_interopDefaultLegacy(monaco),React__default=_interopDefaultLegacy(React),PropTypes__default=_interopDefaultLegacy(PropTypes);const loadingStyles={display:"flex",height:"100%",width:"100%",justifyContent:"center",alignItems:"center"};function Loading({content:content}){return React__default.default.createElement("div",{style:loadingStyles},content)}const styles_wrapper={display:"flex",position:"relative",textAlign:"initial"},styles_fullWidth={width:"100%"},styles_hide={display:"none"};function MonacoContainer({width:width,height:height,isEditorReady:isEditorReady,loading:loading,_ref:_ref,className:className,wrapperClassName:wrapperClassName}){return React__default.default.createElement("section",{style:{...styles_wrapper,width:width,height:height},className:wrapperClassName},!isEditorReady&&React__default.default.createElement(Loading,{content:loading}),React__default.default.createElement("div",{ref:_ref,style:{...styles_fullWidth,...!isEditorReady&&styles_hide},className:className}))}MonacoContainer.propTypes={width:PropTypes__default.default.oneOfType([PropTypes__default.default.number,PropTypes__default.default.string]).isRequired,height:PropTypes__default.default.oneOfType([PropTypes__default.default.number,PropTypes__default.default.string]).isRequired,loading:PropTypes__default.default.oneOfType([PropTypes__default.default.element,PropTypes__default.default.string]).isRequired,isEditorReady:PropTypes__default.default.bool.isRequired,className:PropTypes__default.default.string,wrapperClassName:PropTypes__default.default.string};var MonacoContainer$1=React.memo(MonacoContainer);function useMount(effect){React.useEffect(effect,[])}function useUpdate(effect,deps,applyChanges=!0){const isInitialMount=React.useRef(!0);React.useEffect(isInitialMount.current||!applyChanges?()=>{isInitialMount.current=!1}:effect,deps)}function noop(){}function DiffEditor({original:original,modified:modified,language:language,originalLanguage:originalLanguage,modifiedLanguage:modifiedLanguage,editorDidMount:editorDidMount,theme:theme,width:width,height:height,loading:loading,options:options,className:className,wrapperClassName:wrapperClassName}){const[isEditorReady,setIsEditorReady]=React.useState(!1),[isMonacoMounting,setIsMonacoMounting]=React.useState(!0),editorRef=React.useRef(null),monacoRef=React.useRef(null),containerRef=React.useRef(null),editorDidMountRef=React.useRef(editorDidMount);useMount(()=>{const cancelable=monaco__default.default.init();return cancelable.then(monaco=>(monacoRef.current=monaco)&&setIsMonacoMounting(!1)).catch(error=>"cancelation"!==(null==error?void 0:error.type)&&console.error("Monaco initialization: error:",error)),()=>editorRef.current?disposeEditor():cancelable.cancel()}),useUpdate(()=>{editorRef.current.getModel().modified.setValue(modified)},[modified],isEditorReady),useUpdate(()=>{editorRef.current.getModel().original.setValue(original)},[original],isEditorReady),useUpdate(()=>{const{original:original,modified:modified}=editorRef.current.getModel();monacoRef.current.editor.setModelLanguage(original,originalLanguage||language),monacoRef.current.editor.setModelLanguage(modified,modifiedLanguage||language)},[language,originalLanguage,modifiedLanguage],isEditorReady),useUpdate(()=>{monacoRef.current.editor.setTheme(theme)},[theme],isEditorReady),useUpdate(()=>{editorRef.current.updateOptions(options)},[options],isEditorReady);const setModels=React.useCallback(()=>{const originalModel=monacoRef.current.editor.createModel(original,originalLanguage||language),modifiedModel=monacoRef.current.editor.createModel(modified,modifiedLanguage||language);editorRef.current.setModel({original:originalModel,modified:modifiedModel})},[language,modified,modifiedLanguage,original,originalLanguage]),createEditor=React.useCallback(()=>{editorRef.current=monacoRef.current.editor.createDiffEditor(containerRef.current,{automaticLayout:!0,...options}),setModels(),monacoRef.current.editor.setTheme(theme),setIsEditorReady(!0)},[options,theme,setModels]);React.useEffect(()=>{if(isEditorReady){const{original:original,modified:modified}=editorRef.current.getModel();editorDidMountRef.current(modified.getValue.bind(modified),original.getValue.bind(original),editorRef.current)}},[isEditorReady]),React.useEffect(()=>{!isMonacoMounting&&!isEditorReady&&createEditor()},[isMonacoMounting,isEditorReady,createEditor]);const disposeEditor=()=>editorRef.current.dispose();return React__default.default.createElement(MonacoContainer$1,{width:width,height:height,isEditorReady:isEditorReady,loading:loading,_ref:containerRef,className:className,wrapperClassName:wrapperClassName})}DiffEditor.propTypes={original:PropTypes__default.default.string,modified:PropTypes__default.default.string,language:PropTypes__default.default.string,originalLanguage:PropTypes__default.default.string,modifiedLanguage:PropTypes__default.default.string,editorDidMount:PropTypes__default.default.func,theme:PropTypes__default.default.string,width:PropTypes__default.default.oneOfType([PropTypes__default.default.number,PropTypes__default.default.string]),height:PropTypes__default.default.oneOfType([PropTypes__default.default.number,PropTypes__default.default.string]),loading:PropTypes__default.default.oneOfType([PropTypes__default.default.element,PropTypes__default.default.string]),options:PropTypes__default.default.object,className:PropTypes__default.default.string,wrapperClassName:PropTypes__default.default.string},DiffEditor.defaultProps={editorDidMount:noop,theme:"light",width:"100%",height:"100%",loading:"Loading...",options:{}};var index=React.memo(DiffEditor);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function Editor({value:value,language:language,editorDidMount:editorDidMount,theme:theme,line:line,width:width,height:height,loading:loading,options:options,overrideServices:overrideServices,_isControlledMode:_isControlledMode,className:className,wrapperClassName:wrapperClassName}){const[isEditorReady,setIsEditorReady]=React.useState(!1),[isMonacoMounting,setIsMonacoMounting]=React.useState(!0),editorRef=React.useRef(null),monacoRef=React.useRef(null),containerRef=React.useRef(null),editorDidMountRef=React.useRef(editorDidMount);useMount(()=>{const cancelable=monaco__default.default.init();return cancelable.then(monaco=>(monacoRef.current=monaco)&&setIsMonacoMounting(!1)).catch(error=>"cancelation"!==(null==error?void 0:error.type)&&console.error("Monaco initialization: error:",error)),()=>editorRef.current?disposeEditor():cancelable.cancel()}),useUpdate(()=>{editorRef.current.updateOptions(options)},[options],isEditorReady),useUpdate(()=>{if(editorRef.current.getOption(monacoRef.current.editor.EditorOption.readOnly))editorRef.current.setValue(value);else if(value!==editorRef.current.getValue()){if(editorRef.current.executeEdits("",[{range:editorRef.current.getModel().getFullModelRange(),text:value,forceMoveMarkers:!0}]),_isControlledMode){const model=editorRef.current.getModel();model.forceTokenization(model.getLineCount())}editorRef.current.pushUndoStop()}},[value],isEditorReady),useUpdate(()=>{monacoRef.current.editor.setModelLanguage(editorRef.current.getModel(),language)},[language],isEditorReady),useUpdate(()=>{editorRef.current.setScrollPosition({scrollTop:line})},[line],isEditorReady),useUpdate(()=>{monacoRef.current.editor.setTheme(theme)},[theme],isEditorReady);const createEditor=React.useCallback(()=>{editorRef.current=monacoRef.current.editor.create(containerRef.current,{value:value,language:language,automaticLayout:!0,...options},overrideServices),monacoRef.current.editor.setTheme(theme),setIsEditorReady(!0)},[language,options,overrideServices,theme,value]);React.useEffect(()=>{isEditorReady&&editorDidMountRef.current(editorRef.current.getValue.bind(editorRef.current),editorRef.current)},[isEditorReady]),React.useEffect(()=>{!isMonacoMounting&&!isEditorReady&&createEditor()},[isMonacoMounting,isEditorReady,createEditor]);const disposeEditor=()=>editorRef.current.dispose();return React__default.default.createElement(MonacoContainer$1,{width:width,height:height,isEditorReady:isEditorReady,loading:loading,_ref:containerRef,className:className,wrapperClassName:wrapperClassName})}Editor.propTypes={value:PropTypes__default.default.string,language:PropTypes__default.default.string,editorDidMount:PropTypes__default.default.func,theme:PropTypes__default.default.string,line:PropTypes__default.default.number,width:PropTypes__default.default.oneOfType([PropTypes__default.default.number,PropTypes__default.default.string]),height:PropTypes__default.default.oneOfType([PropTypes__default.default.number,PropTypes__default.default.string]),loading:PropTypes__default.default.oneOfType([PropTypes__default.default.element,PropTypes__default.default.string]),options:PropTypes__default.default.object,className:PropTypes__default.default.string,wrapperClassName:PropTypes__default.default.string,overrideServices:PropTypes__default.default.object,_isControlledMode:PropTypes__default.default.bool},Editor.defaultProps={editorDidMount:noop,theme:"light",width:"100%",height:"100%",loading:"Loading...",options:{},overrideServices:{},_isControlledMode:!1};var Editor$1=React.memo(Editor);function ControlledEditor({value:providedValue,onChange:onChange,editorDidMount:editorDidMount,...props}){const editor=React.useRef(null),listener=React.useRef(null),value=React.useRef(providedValue);value.current=providedValue;const handleEditorModelChange=React.useCallback(event=>{const editorValue=editor.current.getValue();if(value.current!==editorValue){const directChange=onChange(event,editorValue);"string"==typeof directChange&&editorValue!==directChange&&editor.current.setValue(directChange)}},[onChange]),attachChangeEventListener=React.useCallback(()=>{var _editor$current;listener.current=null===(_editor$current=editor.current)||void 0===_editor$current?void 0:_editor$current.onDidChangeModelContent(handleEditorModelChange)},[handleEditorModelChange]);React.useEffect(()=>(attachChangeEventListener(),()=>{var _listener$current;return null===(_listener$current=listener.current)||void 0===_listener$current?void 0:_listener$current.dispose()}),[attachChangeEventListener]);const handleEditorDidMount=React.useCallback((getValue,_editor)=>{editor.current=_editor,attachChangeEventListener(),editorDidMount(getValue,_editor)},[attachChangeEventListener,editorDidMount]);return React__default.default.createElement(Editor$1,_extends({value:providedValue,editorDidMount:handleEditorDidMount,_isControlledMode:!0},props))}ControlledEditor.propTypes={value:PropTypes__default.default.string,editorDidMount:PropTypes__default.default.func,onChange:PropTypes__default.default.func},ControlledEditor.defaultProps={editorDidMount:noop,onChange:noop};var index$1=React.memo(ControlledEditor);Object.defineProperty(exports,"monaco",{enumerable:!0,get:function(){return monaco__default.default}}),exports.ControlledEditor=index$1,exports.DiffEditor=index,exports.default=Editor$1,Object.defineProperty(exports,"__esModule",{value:!0})}));
